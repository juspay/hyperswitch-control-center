/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export const setForexData: (a: number, b: number) => void;
export const convertCurrency: (a: number, b: bigint, c: number, d: number) => void;
export const seedKnowledgeGraph: (a: number, b: number) => void;
export const getValidConnectorsForRule: (a: number, b: number) => void;
export const analyzeProgram: (a: number, b: number) => void;
export const runProgram: (a: number, b: number, c: number) => void;
export const getAllConnectors: (a: number) => void;
export const getAllKeys: (a: number) => void;
export const getKeyType: (a: number, b: number, c: number) => void;
export const getThreeDsKeys: (a: number) => void;
export const getSurchargeKeys: (a: number) => void;
export const getVariantValues: (a: number, b: number, c: number) => void;
export const addTwo: (a: bigint, b: bigint) => bigint;
export const getDescriptionCategory: (a: number) => void;
export const getConnectorConfig: (a: number, b: number, c: number) => void;
export const getPayoutConnectorConfig: (a: number, b: number, c: number) => void;
export const getAuthenticationConnectorConfig: (a: number, b: number, c: number) => void;
export const getTaxProcessorConfig: (a: number, b: number, c: number) => void;
export const getPMAuthenticationProcessorConfig: (a: number, b: number, c: number) => void;
export const getRequestPayload: (a: number, b: number, c: number) => void;
export const getResponsePayload: (a: number, b: number) => void;
export const getAllPayoutKeys: (a: number) => void;
export const getPayoutVariantValues: (a: number, b: number, c: number) => void;
export const getPayoutDescriptionCategory: (a: number) => void;
export const ring_core_0_17_8_bn_mul_mont: (a: number, b: number, c: number, d: number, e: number, f: number) => void;
export const parse: (a: number, b: number, c: number) => void;
export const parseToString: (a: number, b: number, c: number) => void;
export const __wbindgen_export_0: (a: number, b: number) => number;
export const __wbindgen_export_1: (a: number, b: number, c: number, d: number) => number;
export const __wbindgen_export_2: (a: number) => void;
export const __wbindgen_add_to_stack_pointer: (a: number) => number;
export const __wbindgen_export_3: (a: number, b: number, c: number) => void;
