#!/bin/sh

echo "~~~~**** Commit hook started ****~~~~"

commit_msg_file=$1
commit_msg=$(cat "$commit_msg_file")


# For formatting your code
npx prettier --write .
npm run re:format

# Define your commit message convention (e.g., starts with "feat:", "fix:", etc.)
commit_regex="^(Merge branch|(feat|fix|chore|refactor|docs|test|style|enhancement):).+"


if git log --show-signature -n 1 | grep -q 'gpg:'; then
    if ! echo "$commit_msg" | grep -Ei "$commit_regex" ; then
        echo "Aborting commit. Your commit message does not follow the conventional format."
        echo "The commit message should begin with one of the following keywords followed by a colon: 'feat', 'fix', 'chore', 'refactor', 'docs', 'test' or 'style'. For example, it should be formatted like this: 'feat: <subject> - <description>'"
        exit 1
    fi
else
    echo "~~~~**** Error: Commit Signature Missing. ****~~~~"
    echo "Please make sure to sign your commits. You can sign your commit by using the '-S' option with 'git commit'."
    echo "Example: git commit -S -m 'Your commit message'"
    exit 1
fi

# If the commit message matches the convention, the script exits successfully.
echo "~~~~**** Commit hook completed ****~~~~"
exit 0
