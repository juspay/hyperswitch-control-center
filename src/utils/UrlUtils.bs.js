// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as LogicUtils from "./LogicUtils.bs.js";
import * as Core__Option from "@rescript/core/src/Core__Option.bs.js";
import * as UrlFetchUtils from "./UrlFetchUtils.bs.js";
import * as RescriptReactRouter from "@rescript/react/src/RescriptReactRouter.bs.js";

function useGetFilterDictFromUrl(prefix) {
  var url = RescriptReactRouter.useUrl(undefined, undefined);
  var match = React.useState(function () {
    return {};
  });
  var setSearchParamDict = match[1];
  React.useEffect(
    function () {
      if (LogicUtils.isNonEmptyString(url.search)) {
        var searcParamsToDict = Object.fromEntries(
          Belt_Array.keepMap(
            decodeURI(url.search)
              .split("&")
              .map(function (str) {
                var arr = str.split("=");
                var key = Core__Option.getOr(arr[0], "-");
                var val = arr.slice(1).join("=");
                return [key, UrlFetchUtils.getFilterValue(val)];
              }),
            function (entry) {
              var key = entry[0];
              if (LogicUtils.isEmptyString(prefix)) {
                return entry;
              }
              if (key.indexOf(prefix + ".") !== 0) {
                return;
              }
              var transformedKey = key.replace(prefix + ".", "");
              return [transformedKey, entry[1]];
            },
          ),
        );
        setSearchParamDict(function (param) {
          return searcParamsToDict;
        });
      }
    },
    [url.search],
  );
  return match[0];
}

export { useGetFilterDictFromUrl };
/* react Not a pure module */
