// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Core__JSON from "@rescript/core/src/Core__JSON.bs.js";
import * as LogicUtils from "./LogicUtils.bs.js";
import * as Core__Option from "@rescript/core/src/Core__Option.bs.js";
import * as LocalStorage from "../libraries/LocalStorage.bs.js";

var userPreferenceKeyInLocalStorage = "userPreferences";

var lastVisitedTabKey = "lastVisitedTab";

var moduleWisePrefKey = "moduleVisePref";

var moduleConfig = "moduleConfig";

var urlKey = "searchParams";

function convertToModuleVisePref(json) {
  var dict = LogicUtils.getDictFromJsonObject(json);
  return Object.fromEntries(
    Object.keys(dict).map(function (key) {
      var jsonForTheDict = LogicUtils.getDictfromDict(dict, key);
      var value_searchParams = LogicUtils.getString(jsonForTheDict, urlKey, "");
      var value_moduleConfig = LogicUtils.getDictFromJsonObject(
        LogicUtils.getJsonObjectFromDict(jsonForTheDict, moduleConfig),
      );
      var value = {
        searchParams: value_searchParams,
        moduleConfig: value_moduleConfig,
      };
      return [key, value];
    }),
  );
}

function converToUserPref(dict) {
  return Object.fromEntries(
    Object.keys(dict).map(function (key) {
      var jsonForTheDict = LogicUtils.getDictfromDict(dict, key);
      var value_lastVisitedTab = LogicUtils.getString(
        jsonForTheDict,
        lastVisitedTabKey,
        "",
      );
      var value_moduleVisePref = convertToModuleVisePref(
        LogicUtils.getJsonObjectFromDict(jsonForTheDict, moduleWisePrefKey),
      );
      var value = {
        lastVisitedTab: value_lastVisitedTab,
        moduleVisePref: value_moduleVisePref,
      };
      return [key, value];
    }),
  );
}

function saveUserPref(userPref) {
  LocalStorage.setItem(
    userPreferenceKeyInLocalStorage,
    JSON.stringify(
      LogicUtils.getJsonFromArrayOfJson(
        Object.entries(userPref).map(function (item) {
          return [item[0], item[1]];
        }),
      ),
    ),
  );
}

function getUserPref() {
  var str = localStorage.getItem(userPreferenceKeyInLocalStorage);
  if (str == null) {
    return {};
  } else {
    return converToUserPref(
      Core__Option.getOr(
        Core__JSON.Decode.object(LogicUtils.safeParse(str)),
        {},
      ),
    );
  }
}

function getSearchParams(moduleWisePref, key) {
  var match = Core__Option.getOr(moduleWisePref[key], {});
  var searchParams = match.searchParams;
  if (searchParams !== undefined) {
    return searchParams;
  } else {
    return "";
  }
}

export {
  userPreferenceKeyInLocalStorage,
  lastVisitedTabKey,
  moduleWisePrefKey,
  moduleConfig,
  urlKey,
  convertToModuleVisePref,
  converToUserPref,
  saveUserPref,
  getUserPref,
  getSearchParams,
};
/* LogicUtils Not a pure module */
