// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as ProviderHelper from "./ProviderHelper.bs.js";

var defaultIntegrationValue = ProviderHelper.getIntegrationDetails({});

function defaultValue_setShowFeedbackModal(param) {}

function defaultValue_setShowProdIntentForm(param) {}

function defaultValue_setDashboardPageState(param) {}

function defaultValue_setIntegrationDetails(param) {}

var defaultValue_permissionInfo = [];

function defaultValue_setPermissionInfo(param) {}

function defaultValue_setIsProdIntentCompleted(param) {}

var defaultValue_quickStartPageState = {
  TAG: "ConnectProcessor",
  _0: "LANDING",
};

function defaultValue_setQuickStartPageState(param) {}

var defaultValue = {
  showFeedbackModal: false,
  setShowFeedbackModal: defaultValue_setShowFeedbackModal,
  showProdIntentForm: false,
  setShowProdIntentForm: defaultValue_setShowProdIntentForm,
  dashboardPageState: "DEFAULT",
  setDashboardPageState: defaultValue_setDashboardPageState,
  integrationDetails: defaultIntegrationValue,
  setIntegrationDetails: defaultValue_setIntegrationDetails,
  permissionInfo: defaultValue_permissionInfo,
  setPermissionInfo: defaultValue_setPermissionInfo,
  isProdIntentCompleted: undefined,
  setIsProdIntentCompleted: defaultValue_setIsProdIntentCompleted,
  quickStartPageState: defaultValue_quickStartPageState,
  setQuickStartPageState: defaultValue_setQuickStartPageState,
};

var defaultContext = React.createContext(defaultValue);

var make = defaultContext.Provider;

var Provider = {
  make: make,
};

function GlobalProvider(props) {
  var match = React.useState(function () {
    return false;
  });
  var match$1 = React.useState(function () {
    return false;
  });
  var match$2 = React.useState(function () {
    return "DEFAULT";
  });
  var match$3 = React.useState(function () {
    return [];
  });
  var match$4 = React.useState(function () {});
  var match$5 = React.useState(function () {
    return {
      TAG: "ConnectProcessor",
      _0: "LANDING",
    };
  });
  var match$6 = React.useState(function () {
    return ProviderHelper.getIntegrationDetails({});
  });
  return React.createElement(make, {
    value: {
      showFeedbackModal: match[0],
      setShowFeedbackModal: match[1],
      showProdIntentForm: match$1[0],
      setShowProdIntentForm: match$1[1],
      dashboardPageState: match$2[0],
      setDashboardPageState: match$2[1],
      integrationDetails: match$6[0],
      setIntegrationDetails: match$6[1],
      permissionInfo: match$3[0],
      setPermissionInfo: match$3[1],
      isProdIntentCompleted: match$4[0],
      setIsProdIntentCompleted: match$4[1],
      quickStartPageState: match$5[0],
      setQuickStartPageState: match$5[1],
    },
    children: props.children,
  });
}

var make$1 = GlobalProvider;

export {
  defaultIntegrationValue,
  defaultValue,
  defaultContext,
  Provider,
  make$1 as make,
};
/* defaultIntegrationValue Not a pure module */
