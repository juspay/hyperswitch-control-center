// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Loader from "../components/Loader.bs.js";
import * as Recoil from "recoil";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as ErrorBoundary from "../components/ErrorBoundary.bs.js";
import * as ThemeProvider from "../context/ThemeProvider.bs.js";
import * as ModalContainer from "../components/modal/ModalContainer.bs.js";
import * as PopUpContainer from "../components/PopUpContainer.bs.js";
import * as ToastContainer from "../components/ToastContainer.bs.js";
import * as SidebarProvider from "../screens/Sidebar/SidebarProvider.bs.js";
import * as Client from "react-dom/client";
import * as SnackBarContainer from "../components/SnackBarContainer.bs.js";
import * as TokenContextProvider from "../context/TokenContextProvider.bs.js";
import * as UserTimeZoneProvider from "../context/UserTimeZoneProvider.bs.js";

require("tailwindcss/tailwind.css");

function EntryPointUtils$ContextWrapper(props) {
  var loader = React.createElement(
    "div",
    {
      className: "h-screen w-scrren flex justify-center items-center",
    },
    React.createElement(Loader.make, {}),
  );
  return React.createElement(React.Suspense, {
    children: Caml_option.some(
      React.createElement(ErrorBoundary.make, {
        children: React.createElement(Recoil.RecoilRoot, {
          children: React.createElement(ErrorBoundary.make, {
            children: React.createElement(ThemeProvider.make, {
              children: React.createElement(PopUpContainer.make, {
                children: React.createElement(SnackBarContainer.make, {
                  children: React.createElement(ToastContainer.make, {
                    children: React.createElement(TokenContextProvider.make, {
                      children: React.createElement(UserTimeZoneProvider.make, {
                        children: React.createElement(SidebarProvider.make, {
                          children: React.createElement(ModalContainer.make, {
                            children: props.children,
                          }),
                        }),
                      }),
                    }),
                  }),
                }),
              }),
            }),
          }),
        }),
        renderFallback: function (param) {
          return React.createElement("div", undefined, "Error");
        },
      }),
    ),
    fallback: Caml_option.some(loader),
  });
}

var ContextWrapper = {
  make: EntryPointUtils$ContextWrapper,
};

function renderDashboardApp(children) {
  var container = document.querySelector("#app");
  if (container == null) {
    return;
  }
  var root = Client.createRoot(container);
  root.render(
    React.createElement(
      "div",
      {
        className: "h-screen overflow-hidden flex flex-col font-inter-style",
      },
      React.createElement(EntryPointUtils$ContextWrapper, {
        children: children,
      }),
    ),
  );
}

export { ContextWrapper, renderDashboardApp };
/*  Not a pure module */
