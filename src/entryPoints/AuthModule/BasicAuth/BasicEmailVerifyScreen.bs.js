// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Js_exn from "rescript/lib/es6/js_exn.js";
import * as APIUtils from "../../../screens/APIUtils/APIUtils.bs.js";
import * as AuthUtils from "../AuthUtils.bs.js";
import * as LogicUtils from "../../../utils/LogicUtils.bs.js";
import * as Core__Option from "@rescript/core/src/Core__Option.bs.js";
import * as BasicAuthUtils from "./BasicAuthUtils.bs.js";
import * as CommonAuthUtils from "../Common/CommonAuthUtils.bs.js";
import * as SidebarProvider from "../../../screens/Sidebar/SidebarProvider.bs.js";
import * as AuthInfoProvider from "../../../context/AuthInfoProvider.bs.js";
import * as HyperSwitchUtils from "../../../utils/HyperSwitchUtils.bs.js";
import * as EmailVerifyScreen from "../Common/EmailVerifyScreen.bs.js";
import * as Caml_js_exceptions from "rescript/lib/es6/caml_js_exceptions.js";
import * as RescriptReactRouter from "@rescript/react/src/RescriptReactRouter.bs.js";

function BasicEmailVerifyScreen(props) {
  var setAuthType = props.setAuthType;
  var match = React.useContext(AuthInfoProvider.authStatusContext);
  var setAuthStatus = match.setAuthStatus;
  var getURL = APIUtils.useGetURL();
  var url = RescriptReactRouter.useUrl(undefined, undefined);
  var updateDetails = APIUtils.useUpdateMethod(undefined, undefined);
  var match$1 = React.useState(function () {
    return "";
  });
  var setErrorMessage = match$1[1];
  var match$2 = React.useContext(SidebarProvider.defaultContext);
  var setIsSidebarDetails = match$2.setIsSidebarDetails;
  var emailVerifyUpdate = async function (body) {
    try {
      var url = getURL(
        "USERS",
        "Post",
        undefined,
        undefined,
        "VERIFY_EMAILV2",
        undefined,
        undefined,
        undefined,
        undefined,
      );
      var res = await updateDetails(
        url,
        body,
        "Post",
        undefined,
        undefined,
        undefined,
        undefined,
      );
      await HyperSwitchUtils.delay(1000);
      setAuthStatus({
        TAG: "LoggedIn",
        _0: {
          TAG: "BasicAuth",
          _0: BasicAuthUtils.getBasicAuthInfo(res),
        },
      });
      return setIsSidebarDetails("isPinned", false);
    } catch (raw_e) {
      var e = Caml_js_exceptions.internalToOCamlException(raw_e);
      if (e.RE_EXN_ID === Js_exn.$$Error) {
        var err = Core__Option.getOr(e._1.message, "Verification Failed");
        setErrorMessage(function (param) {
          return err;
        });
        return setAuthStatus("LoggedOut");
      }
      throw e;
    }
  };
  React.useEffect(function () {
    var tokenFromUrl = LogicUtils.getDictFromUrlSearchParams(url.search)[
      "token"
    ];
    if (tokenFromUrl !== undefined) {
      emailVerifyUpdate(
        CommonAuthUtils.generateBodyForEmailRedirection(tokenFromUrl),
      );
    } else {
      setErrorMessage(function (param) {
        return "Token not received";
      });
    }
  }, []);
  var onClick = function () {
    AuthUtils.redirectToLogin();
    setAuthType(function (param) {
      return "LoginWithEmail";
    });
  };
  return React.createElement(EmailVerifyScreen.make, {
    errorMessage: match$1[0],
    onClick: onClick,
    trasitionMessage: "Verifying... You will be redirecting..",
  });
}

var make = BasicEmailVerifyScreen;

export { make };
/* react Not a pure module */
