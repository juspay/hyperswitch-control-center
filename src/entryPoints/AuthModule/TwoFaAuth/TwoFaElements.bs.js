// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Icon from "../../../components/Icon.bs.js";
import * as React from "react";
import * as OtpInput from "./OtpInput.bs.js";
import * as TextInput from "../../../components/form/TextInput.bs.js";
import * as HSwitchUtils from "../../../screens/HSwitchUtils.bs.js";
import ReactQrCode from "react-qr-code";

var h2TextStyle = HSwitchUtils.getTextClass(["H2", "Optional"]);

var h3TextStyle = HSwitchUtils.getTextClass(["H3", "Leading_1"]);

var p2Regular = HSwitchUtils.getTextClass(["P2", "Regular"]);

var p3Regular = HSwitchUtils.getTextClass(["P3", "Regular"]);

function TwoFaElements$TotpScanQR(props) {
  var totpUrl = props.totpUrl;
  return React.createElement(
    React.Fragment,
    {},
    React.createElement(
      "div",
      {
        className: "grid grid-cols-4 gap-4 w-full",
      },
      React.createElement(
        "div",
        {
          className: "flex flex-col gap-10 col-span-3",
        },
        React.createElement(
          "p",
          undefined,
          "Use any authenticator app to complete the setup",
        ),
        React.createElement(
          "div",
          {
            className: "flex flex-col gap-4",
          },
          React.createElement(
            "p",
            {
              className: p2Regular,
            },
            "Follow these steps to configure two factor authentication:",
          ),
          React.createElement(
            "div",
            {
              className: "flex flex-col gap-4 ml-2",
            },
            React.createElement(
              "p",
              {
                className: p2Regular + " opacity-60 flex gap-2 items-center",
              },
              React.createElement(
                "div",
                {
                  className:
                    "text-white rounded-full bg-grey-900 opacity-50 px-2 py-0.5",
                },
                "1",
              ),
              "Scan the QR code shown on the screen with your authenticator application",
            ),
            React.createElement(
              "p",
              {
                className: p2Regular + " opacity-60 flex gap-2 items-center",
              },
              React.createElement(
                "div",
                {
                  className:
                    "text-white rounded-full bg-grey-900 opacity-50 px-2 py-0.5",
                },
                "2",
              ),
              "Enter the OTP code displayed on the authenticator app in below text field or textbox",
            ),
          ),
        ),
      ),
      React.createElement(
        "div",
        {
          className:
            "flex flex-col gap-2 col-span-1 items-center justify-center  " +
            (totpUrl.length > 0 ? "blur-none" : "blur-sm"),
        },
        React.createElement(
          "p",
          {
            className: p3Regular,
          },
          "Scan the QR Code into your app",
        ),
        props.isQrVisible
          ? React.createElement(ReactQrCode, {
              value: totpUrl,
              size: 150,
            })
          : React.createElement(Icon.make, {
              name: "spinner",
              size: 20,
              className: "animate-spin",
              parentClass: "w-full h-full flex justify-center items-center",
            }),
      ),
    ),
    React.createElement("div", {
      className: "h-px w-11/12 bg-grey-200 opacity-50",
    }),
  );
}

var TotpScanQR = {
  make: TwoFaElements$TotpScanQR,
};

function TwoFaElements$TotpInput(props) {
  return React.createElement(
    "div",
    {
      className: "flex flex-col gap-4 items-center",
    },
    React.createElement(
      "p",
      undefined,
      "Enter a 6-digit authentication code generated by you authenticator app",
    ),
    React.createElement(OtpInput.make, {
      value: props.otp,
      setValue: props.setOtp,
    }),
  );
}

var TotpInput = {
  make: TwoFaElements$TotpInput,
};

function TwoFaElements$ShowRecoveryCodes(props) {
  return React.createElement(
    "div",
    {
      className:
        "border border-gray-200 rounded-md bg-jp-gray-100 py-6 px-12 flex gap-8 flex justify-evenly",
    },
    React.createElement(
      "div",
      {
        className: "grid grid-cols-2 gap-4",
      },
      props.recoveryCodes.map(function (recoveryCode) {
        return React.createElement(
          "div",
          {
            className: "flex items-center  gap-2",
          },
          React.createElement("div", {
            className: "p-1 rounded-full bg-jp-gray-600",
          }),
          React.createElement(
            "p",
            {
              className: "text-jp-gray-700 text-xl",
            },
            recoveryCode,
          ),
        );
      }),
    ),
  );
}

var ShowRecoveryCodes = {
  make: TwoFaElements$ShowRecoveryCodes,
};

function TwoFaElements$RecoveryCodesInput(props) {
  var setRecoveryCode = props.setRecoveryCode;
  var recoveryCodeInput_onBlur = function (_ev) {};
  var recoveryCodeInput_onChange = function (ev) {
    var value = ev.target.value;
    setRecoveryCode(function (param) {
      return value;
    });
  };
  var recoveryCodeInput_onFocus = function (_ev) {};
  var recoveryCodeInput_value = props.recoveryCode;
  var recoveryCodeInput = {
    name: "recovery_code_input",
    onBlur: recoveryCodeInput_onBlur,
    onChange: recoveryCodeInput_onChange,
    onFocus: recoveryCodeInput_onFocus,
    value: recoveryCodeInput_value,
    checked: true,
  };
  return React.createElement(
    "div",
    {
      className: "flex flex-col gap-4 items-center",
    },
    React.createElement(
      "p",
      undefined,
      "Enter a 8-digit recovery code generated provided during signup.",
    ),
    React.createElement(TextInput.make, {
      input: recoveryCodeInput,
      placeholder: "XXXX-XXXX",
      maxLength: 9,
      customStyle: "h-16 text-xl justify-center text-center",
      customWidth: "w-96",
    }),
  );
}

var RecoveryCodesInput = {
  make: TwoFaElements$RecoveryCodesInput,
};

export {
  h2TextStyle,
  h3TextStyle,
  p2Regular,
  p3Regular,
  TotpScanQR,
  TotpInput,
  ShowRecoveryCodes,
  RecoveryCodesInput,
};
/* h2TextStyle Not a pure module */
