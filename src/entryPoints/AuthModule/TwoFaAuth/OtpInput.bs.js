// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as Core__Option from "@rescript/core/src/Core__Option.bs.js";

function OtpInput$InputFieldForOtp(props) {
  var handleChange = props.handleChange;
  var index = props.index;
  var value = props.value;
  var onChange = function (ev) {
    var currValue = ev.target.value;
    if (!(/^[0-9]+$/.test(currValue) || currValue === "")) {
      return;
    }
    var newValue =
      value.slice(0, index) + currValue + value.slice((index + 1) | 0);
    handleChange(newValue);
  };
  var subVal = value.slice(index, (index + 1) | 0);
  var handleKeyDown = function (ev) {
    var key = ev.keyCode;
    if ((key === 8 || key === 46) && value.length === index) {
      return handleChange(value.slice(0, (index - 1) | 0));
    }
  };
  return React.createElement("input", {
    ref: Caml_option.some(props.inputRef),
    className:
      "text-center h-full w-full border border-jp-2-light-gray-600 rounded-lg outline-none focus:border-blue-500 focus:shadow-focusBoxShadow text-2xl overflow-hidden",
    autoComplete: "off",
    value: subVal,
    onKeyDown: handleKeyDown,
    onFocus: props.handleFocus,
    onChange: onChange,
  });
}

var InputFieldForOtp = {
  make: OtpInput$InputFieldForOtp,
};

function OtpInput(props) {
  var setValue = props.setValue;
  var value = props.value;
  var input1Ref = React.useRef(null);
  var input2Ref = React.useRef(null);
  var input3Ref = React.useRef(null);
  var input4Ref = React.useRef(null);
  var input5Ref = React.useRef(null);
  var input6Ref = React.useRef(null);
  var inputRefArray = [
    input1Ref,
    input2Ref,
    input3Ref,
    input4Ref,
    input5Ref,
    input6Ref,
  ];
  var handleChange = function (str) {
    setValue(function (param) {
      return str.slice(0, 6);
    });
  };
  var handleFocus = function (_val) {
    var indexToFocus = Math.min(5, value.length);
    var elementToFocus = Core__Option.getOr(
      inputRefArray[indexToFocus],
      input1Ref,
    ).current;
    if (!(elementToFocus == null)) {
      elementToFocus.focus();
      return;
    }
  };
  React.useEffect(
    function () {
      var indexToFocus = Math.min(5, value.length);
      var elementToFocus = Core__Option.getOr(
        inputRefArray[indexToFocus],
        input1Ref,
      ).current;
      if (!(elementToFocus == null)) {
        elementToFocus.focus();
      }
    },
    [value.length],
  );
  return React.createElement(
    "div",
    {
      className: "flex justify-center relative ",
    },
    inputRefArray.map(function (ref, index) {
      return React.createElement(
        "div",
        {
          className: "w-16 h-16",
        },
        React.createElement(OtpInput$InputFieldForOtp, {
          inputRef: ref,
          value: value,
          index: index,
          handleChange: handleChange,
          handleFocus: handleFocus,
        }),
      );
    }),
  );
}

var make = OtpInput;

export { InputFieldForOtp, make };
/* react Not a pure module */
