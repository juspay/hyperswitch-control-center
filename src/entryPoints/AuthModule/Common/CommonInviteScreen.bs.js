// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Icon from "../../../components/Icon.bs.js";
import * as React from "react";
import * as Button from "../../../components/Button.bs.js";
import * as RenderIf from "../../../utils/RenderIf.bs.js";
import * as LogicUtils from "../../../utils/LogicUtils.bs.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as Core__Option from "@rescript/core/src/Core__Option.bs.js";
import * as HSwitchUtils from "../../../screens/HSwitchUtils.bs.js";
import * as AuthInfoProvider from "../../../context/AuthInfoProvider.bs.js";

function CommonInviteScreen(props) {
  var onClickLoginToDashboard = props.onClickLoginToDashboard;
  var acceptInviteOnClick = props.acceptInviteOnClick;
  var merchantData = props.merchantData;
  var textHeadingClass = HSwitchUtils.getTextClass(["H2", "Optional"]);
  var textSubHeadingClass = HSwitchUtils.getTextClass(["P1", "Regular"]);
  var match = React.useContext(AuthInfoProvider.authStatusContext);
  var setAuthStatus = match.setAuthStatus;
  var isAtleastOneAccept = React.useMemo(
    function () {
      return LogicUtils.getBool(
        LogicUtils.getDictFromJsonObject(
          Core__Option.getOr(
            merchantData.find(function (ele) {
              var merchantDataDict = LogicUtils.getDictFromJsonObject(ele);
              return (
                LogicUtils.getBool(merchantDataDict, "is_active", false) ===
                true
              );
            }),
            null,
          ),
        ),
        "is_active",
        false,
      );
    },
    [merchantData],
  );
  return React.createElement(HSwitchUtils.BackgroundImageWrapper.make, {
    children: Caml_option.some(
      React.createElement(
        "div",
        {
          className:
            "h-full w-full flex flex-col gap-4 items-center justify-center p-6",
        },
        React.createElement(
          "div",
          {
            className: "bg-white h-35-rem w-200 rounded-2xl",
          },
          React.createElement(
            "div",
            {
              className: "p-6 border-b-2",
            },
            React.createElement("img", {
              alt: "logo-with-text",
              src: "assets/Dark/hyperswitchLogoIconWithText.svg",
            }),
          ),
          React.createElement(
            "div",
            {
              className: "p-6 flex flex-col gap-2",
            },
            React.createElement(
              "p",
              {
                className: textHeadingClass + " text-grey-900",
              },
              "Hey there, welcome to Hyperswitch!",
            ),
            React.createElement(
              "p",
              {
                className: textSubHeadingClass,
              },
              "Please accept the your pending invitations",
            ),
          ),
          React.createElement(
            "div",
            {
              className: "h-[50%] overflow-auto show-scrollbar",
            },
            merchantData.map(function (ele, index) {
              var merchantId = LogicUtils.getString(
                LogicUtils.getDictFromJsonObject(ele),
                "merchant_id",
                "",
              );
              var merchantName = LogicUtils.getString(
                LogicUtils.getDictFromJsonObject(ele),
                "merchant_name",
                "",
              );
              var isActive = LogicUtils.getBool(
                LogicUtils.getDictFromJsonObject(ele),
                "is_active",
                false,
              );
              return React.createElement(
                "div",
                {
                  key: String(index),
                  className:
                    "border-1 m-6 p-5 flex items-center justify-between rounded-xl",
                },
                React.createElement(
                  "div",
                  {
                    className: "flex items-center gap-5",
                  },
                  React.createElement(Icon.make, {
                    name: "group-users",
                    size: 40,
                  }),
                  React.createElement(
                    "div",
                    undefined,
                    "You've been invited to the Hyperswitch dashboard by ",
                    React.createElement(
                      "span",
                      {
                        className: "font-bold",
                      },
                      merchantName.length > 0 ? merchantName : merchantId,
                    ),
                  ),
                ),
                React.createElement(RenderIf.make, {
                  condition: !isActive,
                  children: React.createElement(Button.make, {
                    text: "Accept",
                    buttonType: "PrimaryOutline",
                    onClick: function (param) {
                      acceptInviteOnClick(index);
                    },
                    customButtonStyle: "!p-2",
                  }),
                }),
                React.createElement(RenderIf.make, {
                  condition: isActive,
                  children: React.createElement(
                    "div",
                    {
                      className:
                        "flex items-center gap-1 text-green-accepted_green_800",
                    },
                    React.createElement(Icon.make, {
                      name: "green-tick-without-background",
                    }),
                    "Accepted",
                  ),
                }),
              );
            }),
          ),
          React.createElement(
            "div",
            {
              className: "w-full flex items-center justify-center mt-4",
            },
            React.createElement(Button.make, {
              buttonState: isAtleastOneAccept ? "Normal" : "Disabled",
              text: "Login to Dashboard",
              buttonType: "Primary",
              onClick: function (param) {
                onClickLoginToDashboard();
              },
            }),
          ),
        ),
        React.createElement(
          "div",
          {
            className: "text-grey-200 flex gap-2",
          },
          "Log in with a different account?",
          React.createElement(
            "p",
            {
              className:
                "underline cursor-pointer underline-offset-2 hover:text-blue-700",
              onClick: function (param) {
                setAuthStatus("LoggedOut");
              },
            },
            "Click here to log out.",
          ),
        ),
      ),
    ),
  });
}

var make = CommonInviteScreen;

export { make };
/* Icon Not a pure module */
