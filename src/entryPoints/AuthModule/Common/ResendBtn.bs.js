// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as RenderIf from "../../../utils/RenderIf.bs.js";
import * as ThemeProvider from "../../../context/ThemeProvider.bs.js";

function ResendBtn(props) {
  var callBackFun = props.callBackFun;
  var match = React.useContext(ThemeProvider.themeContext);
  var textColor = match.globalUIConfig.font.textColor;
  var match$1 = React.useState(function () {
    return 30;
  });
  var setSeconds = match$1[1];
  var seconds = match$1[0];
  var isDisabled = seconds > 0;
  var resendOTP = function () {
    callBackFun();
    setSeconds(function (param) {
      return 30;
    });
  };
  var disabledColor = isDisabled ? "text-jp-gray-700" : textColor.primaryNormal;
  React.useEffect(function () {
    var intervalId = setInterval(function () {
      setSeconds(function (p) {
        if (p > 0) {
          return (p - 1) | 0;
        } else {
          return p;
        }
      });
    }, 1000);
    return function () {
      clearInterval(intervalId);
    };
  }, []);
  return React.createElement(
    "div",
    {
      className: "flex w-full justify-center text-sm font-medium",
    },
    React.createElement(
      "div",
      {
        className: "text-dark_black opacity-80 mr-1",
      },
      "Didn't receive the mail?",
    ),
    React.createElement(
      "a",
      {
        className:
          disabledColor +
          " cursor-pointer text-md !hover:" +
          disabledColor +
          " mr-2 underline underline-offset-4",
        onClick: function (param) {
          if (!isDisabled) {
            return resendOTP();
          }
        },
      },
      "Send again.",
    ),
    React.createElement(RenderIf.make, {
      condition: isDisabled,
      children: React.createElement(
        "div",
        {
          className: textColor.primaryNormal,
        },
        "(" + (seconds % 60).toString() + "sec)",
      ),
    }),
  );
}

var make = ResendBtn;

export { make };
/* react Not a pure module */
