// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Recoil from "recoil";
import * as RenderIf from "../../../utils/RenderIf.bs.js";
import * as GlobalVars from "../../../utils/GlobalVars.bs.js";
import * as ThemeProvider from "../../../context/ThemeProvider.bs.js";
import * as AuthModuleHooks from "../AuthModuleHooks.bs.js";
import * as HyperswitchAtom from "../../../Recoils/HyperswitchAtom.bs.js";
import * as ReactFinalForm from "react-final-form";
import * as RescriptReactRouter from "@rescript/react/src/RescriptReactRouter.bs.js";
import * as HyperSwitchEntryUtils from "../../HyperSwitchEntryUtils.bs.js";

function CommonAuth$TermsAndCondition(props) {
  return React.createElement(
    "div",
    {
      className: "text-center text-sm text-gray-300",
      id: "tc-text",
    },
    "By continuing, you agree to our ",
    React.createElement(
      "a",
      {
        className: "underline cursor-pointer",
        href: "https://hyperswitch.io/terms-of-services",
        target: "__blank",
      },
      "Terms of Service",
    ),
    " & ",
    React.createElement(
      "a",
      {
        className: "underline cursor-pointer",
        href: "https://hyperswitch.io/privacyPolicy",
        target: "__blank",
      },
      "Privacy Policy",
    ),
  );
}

var TermsAndCondition = {
  make: CommonAuth$TermsAndCondition,
};

function CommonAuth$PageFooterSection(props) {
  return React.createElement(
    "div",
    {
      className:
        "justify-center text-base flex flex-col md:flex-row md:gap-3 items-center py-5 md:py-7",
    },
    React.createElement(
      "div",
      {
        className: "flex items-center gap-2",
        id: "footer",
      },
      "An open-source initiative by ",
      React.createElement(
        "a",
        {
          href: "https://juspay.in/",
          target: "__blank",
        },
        React.createElement("img", {
          className: "h-3",
          alt: "juspay-logo",
          src: "/icons/juspay-logo-dark.svg",
        }),
      ),
    ),
  );
}

var PageFooterSection = {
  make: CommonAuth$PageFooterSection,
};

function CommonAuth$Header(props) {
  var email = props.email;
  var setAuthType = props.setAuthType;
  var authType = props.authType;
  var match = React.useContext(ThemeProvider.themeContext);
  var textColor = match.globalUIConfig.font.textColor;
  var match$1 = AuthModuleHooks.useAuthMethods();
  var form = ReactFinalForm.useForm();
  var match$2 = Recoil.useRecoilValue(HyperswitchAtom.featureFlagAtom);
  var authId = HyperSwitchEntryUtils.getSessionData(
    "auth_id",
    undefined,
    undefined,
  );
  var headerStyle;
  switch (authType) {
    case "ForgetPassword":
    case "ForgetPasswordEmailSent":
    case "ResendVerifyEmailSent":
    case "MagicLinkEmailSent":
      headerStyle = "flex flex-col justify-center items-center";
      break;
    default:
      headerStyle = "flex flex-col";
  }
  var cardHeaderText;
  switch (authType) {
    case "LoginWithPassword":
    case "LoginWithEmail":
      cardHeaderText = "Hey there, Welcome back!";
      break;
    case "SignUP":
      cardHeaderText = "Welcome to Hyperswitch";
      break;
    case "ForgetPassword":
      cardHeaderText = "Forgot Password?";
      break;
    case "ForgetPasswordEmailSent":
    case "ResendVerifyEmailSent":
    case "MagicLinkEmailSent":
      cardHeaderText = "Please check your inbox";
      break;
    case "ResetPassword":
      cardHeaderText = "Reset Password";
      break;
    case "ResendVerifyEmail":
      cardHeaderText = "Resend Verify Email";
      break;
    default:
      cardHeaderText = "";
  }
  var getNoteUI = function (info) {
    return React.createElement(
      "div",
      {
        className: "flex-col items-center justify-center",
      },
      React.createElement("div", undefined, info),
      React.createElement(
        "div",
        {
          className: "w-full flex justify-center text-center font-bold",
        },
        email,
      ),
    );
  };
  var getHeaderLink = function (prefix, authType, path, sufix) {
    return React.createElement(
      "div",
      {
        className: "flex text-sm items-center gap-2",
      },
      React.createElement(
        "div",
        {
          className: "text-grey-650",
        },
        prefix,
      ),
      React.createElement(
        "div",
        {
          className:
            "font-semibold " + textColor.primaryNormal + " cursor-pointer",
          id: "card-subtitle",
          onClick: function (param) {
            form.resetFieldState("email");
            form.reset({});
            setAuthType(function (param) {
              return authType;
            });
            RescriptReactRouter.push(GlobalVars.appendDashboardPath(path));
          },
        },
        sufix,
      ),
    );
  };
  var showInfoIcon;
  switch (authType) {
    case "ForgetPassword":
    case "ForgetPasswordEmailSent":
    case "ResendVerifyEmailSent":
    case "MagicLinkEmailSent":
    case "ResendVerifyEmail":
      showInfoIcon = true;
      break;
    default:
      showInfoIcon = false;
  }
  var match$3 = match$1.isSignUpAllowed();
  var tmp;
  var exit = 0;
  switch (authType) {
    case "ForgetPassword":
      tmp = React.createElement("img", {
        className: "w-24",
        alt: "password",
        src: "/assets/key-password.svg",
      });
      break;
    case "ForgetPasswordEmailSent":
    case "ResendVerifyEmailSent":
    case "MagicLinkEmailSent":
      exit = 1;
      break;
    default:
      tmp = null;
  }
  if (exit === 1) {
    tmp = React.createElement("img", {
      className: "w-48",
      alt: "mail",
      src: "/assets/mail.svg",
    });
  }
  var tmp$1;
  var exit$1 = 0;
  switch (authType) {
    case "LoginWithPassword":
    case "LoginWithEmail":
      exit$1 = 1;
      break;
    case "SignUP":
      tmp$1 = getHeaderLink(
        "Already using Hyperswitch?",
        match$2.email ? "LoginWithEmail" : "LoginWithPassword",
        "/login?auth_id=" + authId,
        "Sign in",
      );
      break;
    case "ForgetPassword":
      tmp$1 = React.createElement(
        "div",
        {
          className: "text-md text-center text-grey-650 w-full max-w-md",
        },
        "Enter your email address associated with your account, and we'll send you a link to reset your password.",
      );
      break;
    case "ForgetPasswordEmailSent":
      tmp$1 = getNoteUI("A reset password link has been sent to ");
      break;
    case "ResendVerifyEmailSent":
      tmp$1 = getNoteUI("A verify email link has been sent to ");
      break;
    case "MagicLinkEmailSent":
      tmp$1 = getNoteUI("A magic link has been sent to ");
      break;
    default:
      tmp$1 = null;
  }
  if (exit$1 === 1) {
    tmp$1 = React.createElement(RenderIf.make, {
      condition: match$3[0],
      children: getHeaderLink(
        "New to Hyperswitch?",
        "SignUP",
        "/register",
        "Sign up",
      ),
    });
  }
  return React.createElement(
    "div",
    {
      className: headerStyle + " gap-2 h-fit mb-7 w-96",
    },
    React.createElement(RenderIf.make, {
      condition: showInfoIcon,
      children: React.createElement(
        "div",
        {
          className: "flex justify-center my-5",
        },
        tmp,
      ),
    }),
    React.createElement(
      "h1",
      {
        className: "font-semibold text-xl md:text-2xl",
        id: "card-header",
      },
      cardHeaderText,
    ),
    tmp$1,
  );
}

var Header = {
  make: CommonAuth$Header,
};

export { TermsAndCondition, PageFooterSection, Header };
/* react Not a pure module */
