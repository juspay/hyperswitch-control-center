type refundMetaData = {
  udf1: string,
  new_customer: string,
  login_date: string,
}

type refunds = {
  refund_id: string,
  payment_id: string,
  amount: float,
  currency: string,
  reason: string,
  status: string,
  metadata: refundMetaData,
  updated_at: string,
  created_at: string,
  error_message: string,
}

type attempts = {
  attempt_id: string,
  status: string,
  amount: float,
  currency: string,
  connector: string,
  error_message: string,
  payment_method: string,
  connector_transaction_id: string,
  capture_method: string,
  authentication_type: string,
  cancellation_reason: string,
  mandate_id: string,
  error_code: string,
  payment_token: string,
  connector_metadata: string,
  payment_experience: string,
  payment_method_type: string,
  reference_id: string,
  client_source: string,
  client_version: string,
}

type frmMessage = {
  frm_name: string,
  frm_transaction_id: string,
  frm_transaction_type: string,
  frm_status: string,
  frm_score: int,
  frm_reason: string,
  frm_error: string,
}

type error = {
  error_code: string,
  error_message: string,
  unified_code: string,
  unified_message: string,
}

type order = {
  payment_id: string,
  merchant_id: string,
  net_amount: float,
  status: string,
  amount: float,
  amount_capturable: float,
  amount_captured: float,
  client_secret: string,
  created_at: string,
  last_updated?: string,
  currency: string,
  customer_id: string,
  description: string,
  refunds: array<refunds>,
  mandate_id?: string,
  mandate_data?: string,
  capture_on?: string,
  setup_future_usage: string,
  apply_mit_exemption: string,
  customer_present: string,
  capture_method: string,
  payment_method: string,
  payment_method_type: string,
  payment_method_data: option<JSON.t>,
  external_authentication_details: option<JSON.t>,
  payment_token: string,
  shipping: string,
  shippingEmail: string,
  shippingPhone: string,
  billing: string,
  billingEmail: string,
  billingPhone: string,
  payment_method_billing_address: string,
  payment_method_billing_phone: string,
  payment_method_billing_email: string,
  payment_method_billing_first_name: string,
  payment_method_billing_last_name: string,
  metadata: Dict.t<JSON.t>,
  email?: string,
  name?: string,
  phone?: string,
  return_url: string,
  authentication_type: string,
  statement_descriptor: string,
  statement_descriptor_suffix?: string,
  next_action: string,
  cancellation_reason: string,
  error: error,
  connector: string,
  order_quantity?: string,
  product_name?: string,
  card_brand?: string,
  payment_experience: string,
  frm_message: frmMessage,
  connector_payment_id: string,
  connector_id: string,
  frm_merchant_decision: string,
  profile_id: string,
  disputes: array<DisputeTypes.disputes>,
  attempts: array<attempts>,
  merchant_order_reference_id?: string,
  attempt_count: int,
  connector_label?: string,
  routing_algorithm?: Dict.t<JSON.t>,
  routing_algorithm_applied?: Dict.t<JSON.t>,
  authentication_applied?: string,
  split_payments: Dict.t<JSON.t>,
}

type ordersObject = {
  count: int,
  data: array<order>,
  total_count: int,
}
