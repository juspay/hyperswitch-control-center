type webhookDetails = {
  webhook_version: option<string>,
  webhook_username: option<string>,
  webhook_password: option<string>,
  webhook_url: option<string>,
  payment_created_enabled: option<bool>,
  payment_succeeded_enabled: option<bool>,
  payment_failed_enabled: option<bool>,
}
type authConnectorDetailsType = {
  authentication_connectors: option<array<JSON.t>>,
  three_ds_requestor_url: option<string>,
  three_ds_requestor_app_url: option<string>,
}

type commonProfileEntity = {
  profile_id: string,
  merchant_id: string,
  profile_name: string,
  return_url: option<string>,
  payment_response_hash_key: option<string>,
  webhook_details: webhookDetails,
  authentication_connector_details: option<authConnectorDetailsType>,
  collect_shipping_details_from_wallet_connector: option<bool>,
  always_collect_shipping_details_from_wallet_connector: option<bool>,
  collect_billing_details_from_wallet_connector: option<bool>,
  always_collect_billing_details_from_wallet_connector: option<bool>,
  is_connector_agnostic_mit_enabled: option<bool>,
  is_click_to_pay_enabled: option<bool>,
  authentication_product_ids: option<JSON.t>,
  outgoing_webhook_custom_http_headers: option<Dict.t<JSON.t>>,
  is_auto_retries_enabled: option<bool>,
  max_auto_retries_enabled: option<int>,
  metadata: option<Dict.t<JSON.t>>,
  force_3ds_challenge: option<bool>,
  is_debit_routing_enabled: option<bool>,
  acquirer_configs: option<array<JSON.t>>,
  merchant_category_code: option<string>,
  is_network_tokenization_enabled: option<bool>,
  always_request_extended_authorization: option<bool>,
  is_manual_retry_enabled: option<bool>,
  always_enable_overcapture: option<bool>,
  collect_billing_details_from_wallet_connector_if_required: option<bool>,
  collect_shipping_details_from_wallet_connector_if_required: option<bool>,
}
