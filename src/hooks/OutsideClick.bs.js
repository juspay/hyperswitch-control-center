// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as UseEvent from "../utils/UseEvent.bs.js";
import * as Core__Array from "@rescript/core/src/Core__Array.bs.js";

function useOutsideClick(
  refs,
  containerRefs,
  isActive,
  eventsOpt,
  callback,
  param,
) {
  var events = eventsOpt !== undefined ? eventsOpt : ["click"];
  var eventCallback = UseEvent.useEvent0(callback);
  React.useEffect(
    function () {
      if (!isActive) {
        return;
      }
      var handleClick = function (e) {
        var targ = e.target;
        var isInsideClick;
        isInsideClick =
          refs.TAG === "ArrayOfRef"
            ? Core__Array.reduce(refs._0, false, function (acc, ref) {
                var element = ref.current;
                var isClickInsideRef =
                  element == null ? false : element.contains(targ);
                if (acc) {
                  return true;
                } else {
                  return isClickInsideRef;
                }
              })
            : Core__Array.reduce(
                refs._0.current.slice(0, -1),
                false,
                function (acc, ref) {
                  var isClickInsideRef =
                    ref == null ? false : ref.contains(targ);
                  if (acc) {
                    return true;
                  } else {
                    return isClickInsideRef;
                  }
                },
              );
        var isClickInsideOfContainer;
        if (containerRefs !== undefined) {
          var element = containerRefs.current;
          isClickInsideOfContainer =
            element == null ? false : element.contains(targ);
        } else {
          isClickInsideOfContainer = true;
        }
        if (!isInsideClick && isClickInsideOfContainer) {
          return eventCallback();
        }
      };
      setTimeout(function () {
        events.forEach(function ($$event) {
          window.addEventListener($$event, handleClick);
        });
      }, 50);
      return function () {
        events.forEach(function ($$event) {
          window.removeEventListener($$event, handleClick);
        });
      };
    },
    [isActive],
  );
}

export { useOutsideClick };
/* react Not a pure module */
