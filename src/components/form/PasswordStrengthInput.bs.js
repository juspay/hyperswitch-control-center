// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as TextInput from "./TextInput.bs.js";
import * as Core__Array from "@rescript/core/src/Core__Array.bs.js";

function PasswordStrengthInput(props) {
  var __displayStatus = props.displayStatus;
  var input = props.input;
  var displayStatus = __displayStatus !== undefined ? __displayStatus : true;
  var tests = [
    {
      regex: /[0-9]/g,
      weight: 1.0,
    },
    {
      regex: /[a-z]/g,
      weight: 1.0,
    },
    {
      regex: /[A-Z]/g,
      weight: 1.0,
    },
    {
      regex: /[$@$!%*#?&]/g,
      weight: 2.0,
    },
  ];
  var match = React.useState(function () {
    return {
      message: "",
      color: "Red",
    };
  });
  var setPasswordStatus = match[1];
  var passwordStatus = match[0];
  var newInput_name = input.name;
  var newInput_onBlur = input.onBlur;
  var newInput_onChange = function (ev) {
    input.onChange(ev);
    var strVal = ev.target.value;
    var match = Core__Array.reduce(tests, [0, 0.0], function (acc, test) {
      var res = test.regex.exec(strVal);
      var result = res !== null ? res : [];
      var nonEmptyResult = result.length !== 0;
      var localVariety = nonEmptyResult ? (acc[0] + 1) | 0 : 0;
      var localScore =
        acc[1] + (test.weight * result.length + strVal.length * 1.2);
      return [localVariety, localScore];
    });
    var score = match[1];
    var newPasswordStatus =
      strVal.length <= 1
        ? {
            message: "",
            color: "Red",
          }
        : match[0] !== 4
          ? {
              message: "Too Simple",
              color: "Red",
            }
          : score >= 90.0
            ? {
                message: "Strong",
                color: "Green",
              }
            : score >= 65.0
              ? {
                  message: "Good",
                  color: "Green",
                }
              : score >= 40.0
                ? {
                    message: "Average",
                    color: "Yellow",
                  }
                : {
                    message: "Bad",
                    color: "Red",
                  };
    setPasswordStatus(function (param) {
      return newPasswordStatus;
    });
  };
  var newInput_onFocus = input.onFocus;
  var newInput_value = input.value;
  var newInput_checked = input.checked;
  var newInput = {
    name: newInput_name,
    onBlur: newInput_onBlur,
    onChange: newInput_onChange,
    onFocus: newInput_onFocus,
    value: newInput_value,
    checked: newInput_checked,
  };
  var displayColor =
    passwordStatus.color === "Red"
      ? "text-red-500"
      : passwordStatus.color === "Yellow"
        ? "text-yellow-500"
        : "text-green-700";
  return React.createElement(
    "div",
    undefined,
    React.createElement(
      "div",
      undefined,
      React.createElement(TextInput.make, {
        input: newInput,
        placeholder: props.placeholder,
        type_: "password",
        leftIcon: props.leftIcon,
      }),
    ),
    displayStatus
      ? React.createElement(
          "div",
          {
            className: displayColor,
          },
          passwordStatus.message,
        )
      : null,
  );
}

var make = PasswordStrengthInput;

export { make };
/* react Not a pure module */
