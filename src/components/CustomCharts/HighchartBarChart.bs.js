// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Highcharts from "../../libraries/Highcharts.bs.js";
import Highcharts$1 from "highcharts";
import * as ThemeProvider from "../../context/ThemeProvider.bs.js";
import * as LineChartUtils from "./LineChartUtils.bs.js";
import HighchartsReactOfficial from "highcharts-react-official";

function HighchartBarChart$RawBarChart(props) {
  return React.createElement(HighchartsReactOfficial, {
    highcharts: Highcharts$1,
    options: props.options,
  });
}

var RawBarChart = {
  make: HighchartBarChart$RawBarChart,
};

function HighchartBarChart$HighBarChart1D(props) {
  var selectedMetrics = props.selectedMetrics;
  var __isHrizonatalBar = props.isHrizonatalBar;
  var groupKey = props.groupKey;
  var rawData = props.rawData;
  var isHrizonatalBar =
    __isHrizonatalBar !== undefined ? __isHrizonatalBar : true;
  var match = React.useContext(ThemeProvider.themeContext);
  var gridLineColor;
  gridLineColor = match.theme === "Light" ? "#2e2f39" : "#e6e6e6";
  var match$1 = React.useMemo(
    function () {
      return LineChartUtils.barChartDataMaker(
        selectedMetrics.metric_name_db,
        rawData,
        groupKey,
      );
    },
    [rawData, groupKey, selectedMetrics.metric_name_db],
  );
  var barSeries = match$1[1];
  var categories = match$1[0];
  var barOption = React.useMemo(
    function () {
      return {
        chart: Highcharts.makebarChart(
          isHrizonatalBar ? "bar" : "column",
          null,
          undefined,
        ),
        title: {
          text: "",
          style: {},
        },
        xAxis: {
          categories: categories,
        },
        yAxis: {
          gridLineColor: gridLineColor,
          title: {
            text: selectedMetrics.metric_label,
          },
          labels: {
            formatter: function () {
              var param = this;
              return LineChartUtils.formatLabels(selectedMetrics, param.value);
            },
          },
        },
        credits: {
          enabled: false,
        },
        series: barSeries,
        legend: {
          enabled: false,
        },
      };
    },
    [barSeries, gridLineColor],
  );
  if (barSeries.length > 0) {
    return React.createElement(HighchartBarChart$RawBarChart, {
      options: barOption,
    });
  } else {
    return null;
  }
}

var HighBarChart1D = {
  make: HighchartBarChart$HighBarChart1D,
};

export { RawBarChart, HighBarChart1D };
/* react Not a pure module */
