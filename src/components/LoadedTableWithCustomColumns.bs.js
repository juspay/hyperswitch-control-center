// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Icon from "./Icon.bs.js";
import * as React from "react";
import * as Button from "./Button.bs.js";
import * as Portal from "./portal/Portal.bs.js";
import * as Recoil from "recoil";
import * as RenderIf from "../utils/RenderIf.bs.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as LoadedTable from "./LoadedTable.bs.js";
import * as DynamicTableUtils from "./DynamicTableUtils.bs.js";

function LoadedTableWithCustomColumns(props) {
  var __previewOnly = props.previewOnly;
  var __noScrollbar = props.noScrollbar;
  var __showResultsPerPageSelector = props.showResultsPerPageSelector;
  var __showSerialNumberInCustomizeColumns =
    props.showSerialNumberInCustomizeColumns;
  var __sortingBasedOnDisabled = props.sortingBasedOnDisabled;
  var customColumnMapper = props.customColumnMapper;
  var __rowCustomClass = props.rowCustomClass;
  var __titleTooltip = props.titleTooltip;
  var __rowHeightClass = props.rowHeightClass;
  var __getRowDetails = props.getRowDetails;
  var __collapseTableRow = props.collapseTableRow;
  var __tableheadingClass = props.tableheadingClass;
  var __tableLocalFilter = props.tableLocalFilter;
  var __setSummary = props.setSummary;
  var __setData = props.setData;
  var __dataLoading = props.dataLoading;
  var __tableDataLoading = props.tableDataLoading;
  var __hideTitle = props.hideTitle;
  var __ignoreUrlUpdate = props.ignoreUrlUpdate;
  var __hideRightTitleElement = props.hideRightTitleElement;
  var __tableDataBackgroundClass = props.tableDataBackgroundClass;
  var __filters = props.filters;
  var entity = props.entity;
  var __handleRefetch = props.handleRefetch;
  var actualData = props.actualData;
  var __showSerialNumber = props.showSerialNumber;
  var __rightTitleElement = props.rightTitleElement;
  var title = props.title;
  if (__rightTitleElement !== undefined) {
    Caml_option.valFromOption(__rightTitleElement);
  }
  var showSerialNumber =
    __showSerialNumber !== undefined ? __showSerialNumber : false;
  var handleRefetch =
    __handleRefetch !== undefined ? __handleRefetch : function () {};
  var filters =
    __filters !== undefined ? Caml_option.valFromOption(__filters) : null;
  var tableDataBackgroundClass =
    __tableDataBackgroundClass !== undefined ? __tableDataBackgroundClass : "";
  var hideRightTitleElement =
    __hideRightTitleElement !== undefined ? __hideRightTitleElement : false;
  var ignoreUrlUpdate =
    __ignoreUrlUpdate !== undefined ? __ignoreUrlUpdate : false;
  var hideTitle = __hideTitle !== undefined ? __hideTitle : false;
  var tableDataLoading =
    __tableDataLoading !== undefined ? __tableDataLoading : false;
  var dataLoading = __dataLoading !== undefined ? __dataLoading : false;
  var setData = __setData !== undefined ? __setData : function (param) {};
  var setSummary =
    __setSummary !== undefined ? __setSummary : function (param) {};
  var tableLocalFilter =
    __tableLocalFilter !== undefined ? __tableLocalFilter : false;
  var tableheadingClass =
    __tableheadingClass !== undefined ? __tableheadingClass : "";
  var collapseTableRow =
    __collapseTableRow !== undefined ? __collapseTableRow : false;
  var getRowDetails =
    __getRowDetails !== undefined
      ? __getRowDetails
      : function (param) {
          return null;
        };
  var rowHeightClass = __rowHeightClass !== undefined ? __rowHeightClass : "";
  var titleTooltip = __titleTooltip !== undefined ? __titleTooltip : false;
  var rowCustomClass = __rowCustomClass !== undefined ? __rowCustomClass : "";
  var sortingBasedOnDisabled =
    __sortingBasedOnDisabled !== undefined ? __sortingBasedOnDisabled : true;
  var showSerialNumberInCustomizeColumns =
    __showSerialNumberInCustomizeColumns !== undefined
      ? __showSerialNumberInCustomizeColumns
      : true;
  var showResultsPerPageSelector =
    __showResultsPerPageSelector !== undefined
      ? __showResultsPerPageSelector
      : true;
  var noScrollbar = __noScrollbar !== undefined ? __noScrollbar : false;
  var previewOnly = __previewOnly !== undefined ? __previewOnly : false;
  var match = React.useState(function () {
    return false;
  });
  var setShowColumnSelector = match[1];
  var activeColumnsAtom = customColumnMapper;
  var visibleColumns = Recoil.useRecoilValue(customColumnMapper);
  var chooseCols = React.createElement(
    DynamicTableUtils.ChooseColumnsWrapper.make,
    {
      entity: entity,
      totalResults: actualData.length,
      defaultColumns: props.defaultColumns,
      activeColumnsAtom: activeColumnsAtom,
      setShowColumnSelector: setShowColumnSelector,
      showColumnSelector: match[0],
      sortingBasedOnDisabled: sortingBasedOnDisabled,
      showSerialNumber: showSerialNumberInCustomizeColumns,
    },
  );
  var filt = React.createElement(
    "div",
    {
      className: "flex flex-row gap-4",
    },
    filters,
    chooseCols,
  );
  var customizeColumn = React.createElement(RenderIf.make, {
    condition: !hideRightTitleElement,
    children: React.createElement(Portal.make, {
      to: title + "CustomizeColumn",
      children: React.createElement(Button.make, {
        text: "Customize Columns",
        buttonType: "SecondaryFilled",
        buttonSize: "Small",
        leftIcon: {
          TAG: "CustomIcon",
          _0: React.createElement(Icon.make, {
            name: "edit",
            size: 16,
          }),
        },
        onClick: function (param) {
          setShowColumnSelector(function (param) {
            return true;
          });
        },
        customButtonStyle: "!rounded-lg !bg-white !h-10 !text-black",
      }),
    }),
  });
  var rightTitleElement = previewOnly ? null : customizeColumn;
  return React.createElement(LoadedTable.make, {
    visibleColumns: visibleColumns,
    defaultSort: props.defaultSort,
    title: title,
    description: props.description,
    tableActions: props.tableActions,
    rightTitleElement: Caml_option.some(rightTitleElement),
    bottomActions: props.bottomActions,
    showSerialNumber: showSerialNumber,
    actualData: actualData,
    totalResults: props.totalResults,
    resultsPerPage: props.resultsPerPage,
    offset: props.offset,
    setOffset: props.setOffset,
    handleRefetch: handleRefetch,
    entity: entity,
    onEntityClick: props.onEntityClick,
    currrentFetchCount: props.currrentFetchCount,
    filters: Caml_option.some(filt),
    downloadCsv: props.downloadCsv,
    ignoreUrlUpdate: ignoreUrlUpdate,
    hideTitle: hideTitle,
    tableDataLoading: tableDataLoading,
    dataLoading: dataLoading,
    advancedSearchComponent: props.advancedSearchComponent,
    setData: setData,
    setSummary: setSummary,
    dataNotFoundComponent: props.dataNotFoundComponent,
    renderCard: props.renderCard,
    tableLocalFilter: tableLocalFilter,
    tableheadingClass: tableheadingClass,
    collapseTableRow: collapseTableRow,
    getRowDetails: getRowDetails,
    onMouseEnter: props.onMouseEnter,
    onMouseLeave: props.onMouseLeave,
    frozenUpto: props.frozenUpto,
    heightHeadingClass: props.heightHeadingClass,
    rowHeightClass: rowHeightClass,
    titleTooltip: titleTooltip,
    rowCustomClass: rowCustomClass,
    filterObj: props.filterObj,
    setFilterObj: props.setFilterObj,
    filterIcon: props.filterIcon,
    setExtFilteredDataLength: props.setExtFilteredDataLength,
    showResultsPerPageSelector: showResultsPerPageSelector,
    noScrollbar: noScrollbar,
    tableDataBackgroundClass: tableDataBackgroundClass,
  });
}

var make = LoadedTableWithCustomColumns;

export { make };
/* Icon Not a pure module */
