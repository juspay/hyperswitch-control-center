// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as LogicUtils from "../utils/LogicUtils.bs.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as AddDataAttributes from "./AddDataAttributes.bs.js";

function NewThemeUtils$NewThemeHeading(props) {
  var __outerMargin = props.outerMargin;
  var __alignItems = props.alignItems;
  var headingRightElemnt = props.headingRightElemnt;
  var rightActions = props.rightActions;
  var __headingSize = props.headingSize;
  var __descriptionColor = props.descriptionColor;
  var __headingColor = props.headingColor;
  var description = props.description;
  var heading = props.heading;
  var headingColor = __headingColor !== undefined ? __headingColor : "";
  var descriptionColor =
    __descriptionColor !== undefined ? __descriptionColor : "";
  var headingSize = __headingSize !== undefined ? __headingSize : "Large";
  var alignItems = __alignItems !== undefined ? __alignItems : "items-end";
  var outerMargin =
    __outerMargin !== undefined ? __outerMargin : "desktop:mb-6 mb-4";
  var descriptionSize;
  descriptionSize = headingSize === "XSmall" ? "text-fs-12" : "text-fs-14";
  var headingSize$1;
  switch (headingSize) {
    case "XSmall":
      headingSize$1 = "text-fs-14";
      break;
    case "Small":
      headingSize$1 = "text-fs-18";
      break;
    case "Medium":
      headingSize$1 = "text-fs-20";
      break;
    case "Large":
      headingSize$1 = "text-fs-24";
      break;
  }
  var headingColor$1 = LogicUtils.isEmptyString(headingColor)
    ? "text-jp-gray-900"
    : headingColor;
  var descriptionColor$1 = LogicUtils.isEmptyString(descriptionColor)
    ? "text-jp-2-light-gray-1000"
    : descriptionColor;
  return React.createElement(
    "div",
    {
      className: "flex flex-col " + outerMargin + " w-full items-start",
    },
    React.createElement(
      "div",
      {
        className: "flex w-full justify-between " + alignItems + " gap-10",
      },
      React.createElement(
        "div",
        {
          className: "flex flex-col flex-1 gap-1",
        },
        React.createElement(AddDataAttributes.make, {
          attributes: [["data-header-text", heading]],
          children: React.createElement(
            "div",
            {
              className:
                "flex items-center " +
                headingSize$1 +
                " mobile:text-fs-16 font-semibold " +
                headingColor$1 +
                " dark:text-white",
            },
            heading,
            headingRightElemnt !== undefined
              ? Caml_option.valFromOption(headingRightElemnt)
              : null,
          ),
        }),
        description !== undefined
          ? React.createElement(AddDataAttributes.make, {
              attributes: [["data-description-text", description]],
              children: React.createElement(
                "div",
                {
                  className:
                    descriptionSize + " font-normal " + descriptionColor$1,
                },
                description,
              ),
            })
          : null,
      ),
      rightActions !== undefined
        ? Caml_option.valFromOption(rightActions)
        : null,
    ),
  );
}

var NewThemeHeading = {
  make: NewThemeUtils$NewThemeHeading,
};

function NewThemeUtils$Badge(props) {
  var __color = props.color;
  var number = props.number;
  var color = __color !== undefined ? __color : "Blue";
  var match;
  match =
    color === "Blue"
      ? ["bg-blue-500", " text-white"]
      : ["bg-jp-2-light-gray-300", "text-jp-2-light-gray-1800"];
  return React.createElement(AddDataAttributes.make, {
    attributes: [["data-badge-value", number.toString()]],
    children: React.createElement(
      "div",
      {
        className:
          "px-1.5 rounded-full " +
          match[0] +
          " " +
          match[1] +
          " font-semibold text-sm",
      },
      number.toString(),
    ),
  });
}

var Badge = {
  make: NewThemeUtils$Badge,
};

export { NewThemeHeading, Badge };
/* react Not a pure module */
