// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as AuthHooks from "../../hooks/AuthHooks.bs.js";
import * as LogicUtils from "../../utils/LogicUtils.bs.js";
import * as ToastState from "../../hooks/ToastState.bs.js";
import * as Core__Promise from "@rescript/core/src/Core__Promise.bs.js";

var lottieDict = {};

function useLottieJson(lottieFileName) {
  var match = React.useState(function () {
    return null;
  });
  var setlottieJson = match[1];
  var fetchApi = AuthHooks.useApiFetcher();
  var uriPrefix = LogicUtils.useUrlPrefix();
  var showToast = ToastState.useShowToast();
  var prefix = window.location.origin + uriPrefix;
  React.useEffect(
    function () {
      var val = lottieDict[lottieFileName];
      if (val !== undefined) {
        if (val.TAG === "Loading") {
          val._0.then(function (json) {
            setlottieJson(function (param) {
              return json;
            });
          });
        } else {
          var json = val._0;
          setlottieJson(function (param) {
            return json;
          });
        }
      } else {
        var fetchLottie = Core__Promise.$$catch(
          fetchApi(
            prefix + "/lottie-files/" + lottieFileName,
            undefined,
            undefined,
            undefined,
            "Get",
            undefined,
            undefined,
            undefined,
          )
            .then(function (res) {
              return res.json();
            })
            .then(function (json) {
              setlottieJson(function (param) {
                return json;
              });
              lottieDict[lottieFileName] = {
                TAG: "Loaded",
                _0: json,
              };
              return Promise.resolve(json);
            }),
          function (_err) {
            showToast(
              "Error!",
              "ToastError",
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
            );
            return Promise.resolve(null);
          },
        );
        lottieDict[lottieFileName] = {
          TAG: "Loading",
          _0: fetchLottie,
        };
      }
    },
    [lottieFileName],
  );
  return match[0];
}

var selectedTick = "selectedTick.json";

var deselectTick = "deselectTick.json";

var enterCheckBox = "checkbox.json";

var exitCheckBox = "uncheckbox.json";

var enterSearchCross = "enterCross.json";

var exitSearchCross = "exitCross.json";

export {
  selectedTick,
  deselectTick,
  enterCheckBox,
  exitCheckBox,
  enterSearchCross,
  exitSearchCross,
  lottieDict,
  useLottieJson,
};
/* react Not a pure module */
