// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as ButtonGroupContext from "../context/ButtonGroupContext.bs.js";

function makeInfoRecord(isFirst, isLast) {
  return {
    isFirst: isFirst,
    isLast: isLast,
  };
}

function ButtonGroup$ButtonWrapper(props) {
  var index = props.index;
  var isFirst = index === 0;
  var isLast = index === ((props.count - 1) | 0);
  var value = React.useMemo(
    function () {
      return {
        isFirst: isFirst,
        isLast: isLast,
      };
    },
    [isFirst, isLast],
  );
  return React.createElement(ButtonGroupContext.Parent.make, {
    value: value,
    children: props.element,
  });
}

var ButtonWrapper = {
  makeInfoRecord: makeInfoRecord,
  make: ButtonGroup$ButtonWrapper,
};

function ButtonGroup(props) {
  var __wrapperClass = props.wrapperClass;
  var children = props.children;
  var wrapperClass =
    __wrapperClass !== undefined ? __wrapperClass : "flex flex-row";
  var count = React.Children.count(children);
  return React.createElement(
    "div",
    {
      className: wrapperClass,
    },
    React.Children.map(children, function (element, index) {
      return React.createElement(ButtonGroup$ButtonWrapper, {
        element: element,
        count: count,
        index: index,
      });
    }),
  );
}

var make = ButtonGroup;

export { ButtonWrapper, make };
/* react Not a pure module */
