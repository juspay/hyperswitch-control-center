// Generated by ReScript, PLEASE EDIT WITH CARE

import * as SelectBox from "./SelectBox.bs.js";
import * as LogicUtils from "../utils/LogicUtils.bs.js";
import * as InputFields from "./InputFields.bs.js";
import * as FormRenderer from "./form/FormRenderer.bs.js";

var feedbackTextBox = FormRenderer.makeFieldInfo(
  "",
  undefined,
  "feedbacks",
  InputFields.multiLineTextInput(
    false,
    6,
    4,
    undefined,
    undefined,
    undefined,
    undefined,
  ),
  undefined,
  undefined,
  undefined,
  undefined,
  "Tell us in words...",
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
);

var feedbackTypeList = ["Suggestion", "Bugs", "Other"];

function getFeedBackStringFromVariant(feedbackType) {
  switch (feedbackType) {
    case "Suggestion":
      return "Suggestion";
    case "Bugs":
      return "Bugs";
    case "RequestConnector":
      return "Request A Connector";
    case "Other":
      return "Other";
  }
}

var selectFeedbackType = FormRenderer.makeFieldInfo(
  "",
  undefined,
  "category",
  InputFields.radioInput(
    SelectBox.makeOptions(feedbackTypeList.map(getFeedBackStringFromVariant)),
    "options",
    undefined,
    undefined,
    true,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
  ),
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
);

var connectorNameField = FormRenderer.makeFieldInfo(
  "Processor Name",
  undefined,
  "connector_name",
  InputFields.textInput(
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
  ),
  undefined,
  undefined,
  undefined,
  undefined,
  "Enter a processor name",
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
);

var connectorDescription = FormRenderer.makeFieldInfo(
  "Description",
  undefined,
  "description",
  InputFields.multiLineTextInput(
    false,
    6,
    4,
    undefined,
    undefined,
    undefined,
    undefined,
  ),
  undefined,
  undefined,
  undefined,
  undefined,
  "Write here...",
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
);

function validateFields(values, modalType) {
  var errors = {};
  var values$1 = LogicUtils.getDictFromJsonObject(values);
  if (modalType === "FeedBackModal") {
    if (LogicUtils.getInt(values$1, "rating", -1) === -1) {
      errors["rating"] = "Please rate";
    }
    if (
      LogicUtils.isNonEmptyString(
        LogicUtils.getString(values$1, "category", ""),
      ) &&
      LogicUtils.isEmptyString(LogicUtils.getString(values$1, "feedbacks", ""))
    ) {
      errors["feedbacks"] = "Please give the feedback";
    }
  } else if (LogicUtils.getString(values$1, "connector_name", "").length <= 0) {
    errors["connector_name"] = "Please enter a connector name";
  }
  return errors;
}

var makeFieldInfo = FormRenderer.makeFieldInfo;

export {
  makeFieldInfo,
  feedbackTextBox,
  feedbackTypeList,
  getFeedBackStringFromVariant,
  selectFeedbackType,
  connectorNameField,
  connectorDescription,
  validateFields,
};
/* feedbackTextBox Not a pure module */
