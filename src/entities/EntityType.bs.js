// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Core__JSON from "@rescript/core/src/Core__JSON.bs.js";
import * as LogicUtils from "../utils/LogicUtils.bs.js";
import * as FormRenderer from "../components/form/FormRenderer.bs.js";

function getDefaultEntityOptionType() {
  return {
    urlKey: "",
    field: FormRenderer.makeFieldInfo(
      undefined,
      undefined,
      "",
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
    ),
    parser: function (json) {
      return json;
    },
    localFilter: undefined,
  };
}

var dict = {};

dict["offset"] = 0.0;

function defaultGetSummary(json, totalCountKey) {
  var dict = Core__JSON.Decode.object(json);
  if (dict === undefined) {
    return {
      totalCount: 0,
      count: 0,
    };
  }
  var summary_totalCount = LogicUtils.getInt(dict, totalCountKey, 0);
  var summary_count = LogicUtils.getInt(dict, "count", 0);
  var summary = {
    totalCount: summary_totalCount,
    count: summary_count,
  };
  if (summary_totalCount < summary_count) {
    return {
      totalCount: summary_count,
      count: summary_count,
    };
  } else {
    return summary;
  }
}

function makeEntity(
  uri,
  getObjects,
  defaultColumns,
  allColumns,
  getHeading,
  getCell,
  dataKeyOpt,
  summaryKeyOpt,
  totalCountKeyOpt,
  getSummaryOpt,
  detailsKeyOpt,
  getShowLink,
  getNewUrlOpt,
  defaultFilters,
  initialFiltersOpt,
  optionsOpt,
  getDetailsUriOpt,
  headersOpt,
  getSyncUrlOpt,
  detailsPageLayoutOpt,
  searchFieldsOpt,
  searchUrlOpt,
  searchKeyListOpt,
  optionalSearchFieldsListOpt,
  requiredSearchFieldsListOpt,
  popupFilterFieldsOpt,
  dateRangeFilterDictOpt,
  searchValueDict,
  filterCheckOpt,
  filterForRowOpt,
  param,
) {
  var dataKey = dataKeyOpt !== undefined ? dataKeyOpt : "list";
  var summaryKey = summaryKeyOpt !== undefined ? summaryKeyOpt : "summary";
  var totalCountKey =
    totalCountKeyOpt !== undefined ? totalCountKeyOpt : "totalCount";
  var getSummary =
    getSummaryOpt !== undefined
      ? getSummaryOpt
      : function (json) {
          return defaultGetSummary(json, totalCountKey);
        };
  var detailsKey = detailsKeyOpt !== undefined ? detailsKeyOpt : "payload";
  var getNewUrl =
    getNewUrlOpt !== undefined
      ? getNewUrlOpt
      : function (param) {
          return "";
        };
  var initialFilters = initialFiltersOpt !== undefined ? initialFiltersOpt : [];
  var options = optionsOpt !== undefined ? optionsOpt : [];
  var getDetailsUri =
    getDetailsUriOpt !== undefined
      ? getDetailsUriOpt
      : function (param) {
          return "";
        };
  var headers = headersOpt !== undefined ? headersOpt : {};
  var getSyncUrl =
    getSyncUrlOpt !== undefined ? getSyncUrlOpt : function (param) {};
  var detailsPageLayout =
    detailsPageLayoutOpt !== undefined
      ? detailsPageLayoutOpt
      : function (param, param$1) {
          return null;
        };
  var searchFields = searchFieldsOpt !== undefined ? searchFieldsOpt : [];
  var searchUrl = searchUrlOpt !== undefined ? searchUrlOpt : "";
  var searchKeyList = searchKeyListOpt !== undefined ? searchKeyListOpt : [];
  var optionalSearchFieldsList =
    optionalSearchFieldsListOpt !== undefined
      ? optionalSearchFieldsListOpt
      : [];
  var requiredSearchFieldsList =
    requiredSearchFieldsListOpt !== undefined
      ? requiredSearchFieldsListOpt
      : [];
  var popupFilterFields =
    popupFilterFieldsOpt !== undefined ? popupFilterFieldsOpt : [];
  var dateRangeFilterDict =
    dateRangeFilterDictOpt !== undefined ? dateRangeFilterDictOpt : {};
  var filterCheck =
    filterCheckOpt !== undefined
      ? filterCheckOpt
      : function (param, param$1) {
          return false;
        };
  var filterForRow =
    filterForRowOpt !== undefined
      ? filterForRowOpt
      : function (param, param$1) {
          return {
            key: "",
            options: [],
            selected: [],
          };
        };
  return {
    uri: uri,
    getObjects: getObjects,
    defaultColumns: defaultColumns,
    allColumns: allColumns,
    getHeading: getHeading,
    getCell: getCell,
    dataKey: dataKey,
    summaryKey: summaryKey,
    getSummary: getSummary,
    getShowLink: getShowLink,
    defaultFilters: defaultFilters !== undefined ? defaultFilters : dict,
    headers: headers,
    initialFilters: initialFilters,
    options: options,
    getDetailsUri: getDetailsUri,
    getNewUrl: getNewUrl,
    getSyncUrl: getSyncUrl,
    detailsPageLayout: detailsPageLayout,
    searchFields: searchFields,
    searchUrl: searchUrl,
    searchKeyList: searchKeyList,
    optionalSearchFieldsList: optionalSearchFieldsList,
    requiredSearchFieldsList: requiredSearchFieldsList,
    detailsKey: detailsKey,
    popupFilterFields: popupFilterFields,
    dateRangeFilterDict: dateRangeFilterDict,
    searchValueDict: searchValueDict,
    filterCheck: filterCheck,
    filterForRow: filterForRow,
  };
}

var emptyObj = dict;

export { getDefaultEntityOptionType, emptyObj, defaultGetSummary, makeEntity };
/*  Not a pure module */
