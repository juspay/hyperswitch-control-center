// Generated by ReScript, PLEASE EDIT WITH CARE

var frmList = [
  {
    TAG: "FRM",
    _0: "Signifyd",
  },
  {
    TAG: "FRM",
    _0: "Riskifyed",
  },
];

var flowTypeList = ["PreAuth", "PostAuth"];

function getFRMAuthType(connector) {
  if (connector.TAG === "FRM") {
    if (connector._0 === "Signifyd") {
      return "HeaderKey";
    } else {
      return "BodyKey";
    }
  } else {
    return "";
  }
}

var stepsArr = ["PaymentMethods", "IntegFields", "SummaryAndTest"];

function getNextStep(currentStep) {
  switch (currentStep) {
    case "PaymentMethods":
      return "IntegFields";
    case "IntegFields":
    case "SummaryAndTest":
      return "SummaryAndTest";
    case "Preview":
    case "AutomaticFlow":
      return "Preview";
  }
}

function getPrevStep(currentStep) {
  switch (currentStep) {
    case "IntegFields":
      return "PaymentMethods";
    case "SummaryAndTest":
      return "IntegFields";
    default:
      return "Preview";
  }
}

function getFlowTypeNameString(flowType) {
  if (flowType === "PreAuth") {
    return "pre";
  } else {
    return "post";
  }
}

function getFlowTypeVariantFromString(flowTypeString) {
  if (flowTypeString === "pre") {
    return "PreAuth";
  } else {
    return "PostAuth";
  }
}

function getFlowTypeLabel(flowType) {
  var match = getFlowTypeVariantFromString(flowType);
  if (match === "PreAuth") {
    return "Pre Auth";
  } else {
    return "Post Auth";
  }
}

var frmPreActionList = ["CancelTxn"];

var frmPostActionList = ["ManualReview"];

function getActionTypeNameString(flowType) {
  switch (flowType) {
    case "CancelTxn":
      return "cancel_txn";
    case "AutoRefund":
      return "auto_refund";
    case "ManualReview":
      return "manual_review";
    case "Process":
      return "process";
  }
}

function getActionTypeNameVariantFromString(flowType) {
  switch (flowType) {
    case "auto_refund":
      return "AutoRefund";
    case "manual_review":
      return "ManualReview";
    case "process":
      return "Process";
    default:
      return "CancelTxn";
  }
}

function getActionTypeLabel(actionType) {
  var match = getActionTypeNameVariantFromString(actionType);
  switch (match) {
    case "CancelTxn":
      return "Cancel Transactions";
    case "AutoRefund":
      return "Auto Refund";
    case "ManualReview":
      return "Manual Review";
    case "Process":
      return "Process Transactions";
  }
}

var flowTypeAllOptions = flowTypeList.map(getFlowTypeNameString);

function getActionTypeAllOptions(flowType) {
  var match = getFlowTypeVariantFromString(flowType);
  if (match === "PreAuth") {
    return frmPreActionList.map(getActionTypeNameString);
  } else {
    return frmPostActionList.map(getActionTypeNameString);
  }
}

var ignoredField = [
  "business_country",
  "business_label",
  "business_sub_label",
  "connector_label",
  "merchant_connector_id",
  "connector_name",
  "profile_id",
  "applepay_verified_domains",
];

function actionDescriptionForFlow(flowType) {
  if (flowType === "PreAuth") {
    return "PreAuth flow - fraudulent transactions are cancelled before authorization.";
  } else {
    return "PostAuth flow - fraudulent transactions are flagged for a manual review before amount capture.";
  }
}

export {
  frmList,
  flowTypeList,
  getFRMAuthType,
  stepsArr,
  getNextStep,
  getPrevStep,
  getFlowTypeNameString,
  getFlowTypeVariantFromString,
  getFlowTypeLabel,
  frmPreActionList,
  frmPostActionList,
  getActionTypeNameString,
  getActionTypeNameVariantFromString,
  getActionTypeLabel,
  flowTypeAllOptions,
  getActionTypeAllOptions,
  ignoredField,
  actionDescriptionForFlow,
};
/* flowTypeAllOptions Not a pure module */
