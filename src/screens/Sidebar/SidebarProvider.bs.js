// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as LogicUtils from "../../utils/LogicUtils.bs.js";
import * as Core__Option from "@rescript/core/src/Core__Option.bs.js";
import * as LocalStorage from "../../libraries/LocalStorage.bs.js";
import * as HSLocalStorage from "../HSLocalStorage.bs.js";

function setIsSidebarDetails(key, value) {
  var localStorageData = HSLocalStorage.getInfoFromLocalStorage("sidebar");
  localStorageData[key] = value;
  LocalStorage.setItem(
    "sidebar",
    Core__Option.getOr(JSON.stringify(localStorageData), ""),
  );
}

function getFromSidebarDetails(key) {
  return LogicUtils.getBool(
    HSLocalStorage.getInfoFromLocalStorage("sidebar"),
    key,
    false,
  );
}

function defaultValue_setIsSidebarExpanded(param) {}

var defaultValue = {
  isSidebarExpanded: false,
  setIsSidebarExpanded: defaultValue_setIsSidebarExpanded,
  getFromSidebarDetails: getFromSidebarDetails,
  setIsSidebarDetails: setIsSidebarDetails,
};

var defaultContext = React.createContext(defaultValue);

var make = defaultContext.Provider;

var Provider = {
  make: make,
};

function SidebarProvider(props) {
  var match = React.useState(function () {
    return false;
  });
  return React.createElement(make, {
    value: {
      isSidebarExpanded: match[0],
      setIsSidebarExpanded: match[1],
      getFromSidebarDetails: getFromSidebarDetails,
      setIsSidebarDetails: setIsSidebarDetails,
    },
    children: props.children,
  });
}

var make$1 = SidebarProvider;

export {
  setIsSidebarDetails,
  getFromSidebarDetails,
  defaultValue,
  defaultContext,
  Provider,
  make$1 as make,
};
/* defaultContext Not a pure module */
