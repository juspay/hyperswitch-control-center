// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Icon from "../../../components/Icon.bs.js";
import * as React from "react";
import * as Js_exn from "rescript/lib/es6/js_exn.js";
import * as ToolTip from "../../../components/tooltip/ToolTip.bs.js";
import * as APIUtils from "../../APIUtils/APIUtils.bs.js";
import * as RenderIf from "../../../utils/RenderIf.bs.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as Core__Option from "@rescript/core/src/Core__Option.bs.js";
import * as FormRenderer from "../../../components/form/FormRenderer.bs.js";
import * as HelperComponents from "../../Helpers/HelperComponents.bs.js";
import * as PageLoaderWrapper from "../../Helpers/PageLoaderWrapper.bs.js";
import * as Caml_js_exceptions from "rescript/lib/es6/caml_js_exceptions.js";
import * as MerchantAccountDetailsMapper from "../../../utils/Mappers/MerchantAccountDetailsMapper.bs.js";

function PublishableAndHashKeySection(props) {
  var getURL = APIUtils.useGetURL();
  var fetchDetails = APIUtils.useGetMethod(undefined, undefined);
  var match = React.useState(function () {
    return MerchantAccountDetailsMapper.getMerchantDetails(null);
  });
  var setMerchantInfo = match[1];
  var merchantInfo = match[0];
  var match$1 = React.useState(function () {
    return "Loading";
  });
  var setScreenState = match$1[1];
  var getMerchantDetails = async function () {
    setScreenState(function (param) {
      return "Loading";
    });
    try {
      var accountUrl = getURL(
        "MERCHANT_ACCOUNT",
        "Get",
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
      );
      var merchantDetails = await fetchDetails(accountUrl);
      var merchantInfo =
        MerchantAccountDetailsMapper.getMerchantDetails(merchantDetails);
      setMerchantInfo(function (param) {
        return merchantInfo;
      });
      return setScreenState(function (param) {
        return "Success";
      });
    } catch (raw_e) {
      var e = Caml_js_exceptions.internalToOCamlException(raw_e);
      if (e.RE_EXN_ID === Js_exn.$$Error) {
        var e$1 = e._1;
        return setScreenState(function (param) {
          return {
            TAG: "Error",
            _0: Core__Option.getOr(e$1.message, "Error"),
          };
        });
      }
      throw e;
    }
  };
  React.useEffect(function () {
    getMerchantDetails();
  }, []);
  var paymentResponsHashKey = Core__Option.getOr(
    merchantInfo.payment_response_hash_key,
    "",
  );
  return React.createElement(PageLoaderWrapper.make, {
    children: Caml_option.some(
      React.createElement(
        "div",
        {
          className: "mt-10",
        },
        React.createElement(
          "h2",
          {
            className:
              "font-bold text-xl pb-3 text-black text-opacity-75 dark:text-white dark:text-opacity-75",
          },
          "Publishable Key and Payment Response Hash Key",
        ),
        React.createElement(
          "div",
          {
            className:
              "px-2 py-4 border border-jp-gray-500 dark:border-jp-gray-960 bg-white dark:bg-jp-gray-lightgray_background rounded-md",
          },
          React.createElement(
            FormRenderer.DesktopRow.make,
            {
              children: null,
            },
            React.createElement(
              "div",
              {
                className: "flex flex-col gap-4",
              },
              React.createElement(
                "div",
                {
                  className: "flex",
                },
                React.createElement(
                  "div",
                  {
                    className:
                      "break-all text-md text-base text-grey-700 font-semibold",
                  },
                  "Publishable Key",
                ),
                React.createElement(
                  "div",
                  {
                    className: "ml-1 mt-0.5 h-5 w-5",
                  },
                  React.createElement(ToolTip.make, {
                    description: "Visit Dev Docs",
                    toolTipFor: Caml_option.some(
                      React.createElement(
                        "div",
                        {
                          className: "cursor-pointer",
                          onClick: function (param) {
                            window.open("https://hyperswitch.io/docs");
                          },
                        },
                        React.createElement(Icon.make, {
                          name: "open_arrow",
                          size: 12,
                        }),
                      ),
                    ),
                    tooltipWidthClass: "w-fit",
                    toolTipPosition: "Top",
                  }),
                ),
              ),
              React.createElement(HelperComponents.CopyTextCustomComp.make, {
                displayValue: merchantInfo.publishable_key,
                customTextCss:
                  "break-all text-sm font-semibold text-jp-gray-800 text-opacity-75",
                customParentClass: "flex items-center gap-5",
              }),
            ),
            React.createElement(RenderIf.make, {
              condition: paymentResponsHashKey.length !== 0,
              children: React.createElement(
                "div",
                {
                  className: "flex flex-col gap-4",
                },
                React.createElement(
                  "div",
                  {
                    className:
                      "break-all text-md text-base text-grey-700 font-semibold",
                  },
                  "Payment Response Hash Key",
                ),
                React.createElement(HelperComponents.CopyTextCustomComp.make, {
                  displayValue: paymentResponsHashKey,
                  customTextCss:
                    "break-all text-sm font-semibold text-jp-gray-800 text-opacity-75",
                  customParentClass: "flex items-center gap-5",
                }),
              ),
            }),
          ),
        ),
      ),
    ),
    screenState: match$1[0],
    sectionHeight: "h-40-vh",
  });
}

var make = PublishableAndHashKeySection;

export { make };
/* Icon Not a pure module */
