// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Js_exn from "rescript/lib/es6/js_exn.js";
import * as Recoil from "recoil";
import * as APIUtils from "../APIUtils/APIUtils.bs.js";
import * as Core__Option from "@rescript/core/src/Core__Option.bs.js";
import * as HyperswitchAtom from "../../Recoils/HyperswitchAtom.bs.js";
import * as Caml_js_exceptions from "rescript/lib/es6/caml_js_exceptions.js";
import * as MerchantAccountDetailsMapper from "../../utils/Mappers/MerchantAccountDetailsMapper.bs.js";

function useFetchMerchantDetails() {
  var getURL = APIUtils.useGetURL();
  var setMerchantDetailsValue = Recoil.useSetRecoilState(
    HyperswitchAtom.merchantDetailsValueAtom,
  );
  var fetchDetails = APIUtils.useGetMethod(undefined, undefined);
  return async function (param) {
    try {
      var accountUrl = getURL(
        "MERCHANT_ACCOUNT",
        "Get",
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
      );
      var merchantDetailsJSON = await fetchDetails(accountUrl);
      return setMerchantDetailsValue(function (param) {
        return MerchantAccountDetailsMapper.getMerchantDetails(
          merchantDetailsJSON,
        );
      });
    } catch (raw_e) {
      var e = Caml_js_exceptions.internalToOCamlException(raw_e);
      if (e.RE_EXN_ID === Js_exn.$$Error) {
        return Js_exn.raiseError(
          Core__Option.getOr(e._1.message, "Failed to fetch merchant details!"),
        );
      }
      throw e;
    }
  };
}

export { useFetchMerchantDetails };
/* recoil Not a pure module */
