// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Button from "../../components/Button.bs.js";
import * as APIUtils from "../APIUtils/APIUtils.bs.js";
import * as Core__List from "@rescript/core/src/Core__List.bs.js";
import * as LogicUtils from "../../utils/LogicUtils.bs.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as IframeUtils from "../../utils/IframeUtils.bs.js";
import * as Core__Option from "@rescript/core/src/Core__Option.bs.js";
import * as PageLoaderWrapper from "../Helpers/PageLoaderWrapper.bs.js";

function ReconModule(props) {
  var urlList = props.urlList;
  var getURL = APIUtils.useGetURL();
  var fetchDetails = APIUtils.useGetMethod(undefined, undefined);
  var match = React.useState(function () {
    return "";
  });
  var setRedirectToken = match[1];
  var redirectToken = match[0];
  var match$1 = React.useState(function () {
    return "Loading";
  });
  var setScreenState = match$1[1];
  var match$2 = React.useState(function () {
    return false;
  });
  var setIframeLoaded = match$2[1];
  var iframeRef = React.useRef(null);
  var getReconToken = async function () {
    try {
      var url = getURL(
        "RECON",
        "Get",
        undefined,
        undefined,
        undefined,
        undefined,
        "TOKEN",
        undefined,
        undefined,
      );
      var res = await fetchDetails(url);
      var token = LogicUtils.getString(
        LogicUtils.getDictFromJsonObject(res),
        "token",
        "",
      );
      setRedirectToken(function (param) {
        return token;
      });
      return setScreenState(function (param) {
        return "Success";
      });
    } catch (exn) {
      return setScreenState(function (param) {
        return {
          TAG: "Error",
          _0: "Something went wrong!",
        };
      });
    }
  };
  var redirectUrl;
  if (urlList) {
    var exit = 0;
    switch (urlList.hd) {
      case "recon-analytics":
        redirectUrl = urlList.tl ? "" : "analytics";
        break;
      case "config-settings":
      case "file-processor":
      case "reports":
      case "run-recon":
      case "upload-files":
        exit = 1;
        break;
      default:
        redirectUrl = "";
    }
    if (exit === 1) {
      redirectUrl = urlList.tl ? "" : Core__List.toArray(urlList).join("/");
    }
  } else {
    redirectUrl = "";
  }
  React.useEffect(
    function () {
      getReconToken();
    },
    [match$2[0], redirectUrl],
  );
  var iframeEl = iframeRef.current;
  if (!(iframeEl == null)) {
    var tokenDict = Object.fromEntries([["token", redirectToken]]);
    var dict = Object.fromEntries([
      ["eventType", "AuthenticationDetails"],
      ["payload", tokenDict],
    ]);
    IframeUtils.iframePostMessage(iframeEl, dict);
  }
  return React.createElement(React.Fragment, {
    children: Caml_option.some(
      React.createElement(PageLoaderWrapper.make, {
        children: Caml_option.some(
          LogicUtils.isNonEmptyString(redirectToken)
            ? React.createElement(
                "div",
                {
                  className: "h-85-vh overflow-scroll",
                },
                React.createElement("iframe", {
                  ref: Caml_option.some(iframeRef),
                  className: "h-full w-full",
                  id: "recon-module",
                  height: "100%",
                  src:
                    Core__Option.getOr(window._env_.reconIframeUrl, "") +
                    "/" +
                    redirectUrl,
                  width: "100%",
                  onLoad: function (_ev) {
                    setIframeLoaded(function (param) {
                      return true;
                    });
                  },
                }),
              )
            : React.createElement(
                "div",
                {
                  className:
                    "bg-white dark:bg-jp-gray-lightgray_background border-2 rounded dark:border-jp-gray-850 grid grid-cols-1 md:gap-5 p-2 md:p-8 h-2/3 items-center",
                },
                React.createElement(
                  "div",
                  {
                    className:
                      "flex flex-col items-center w-4/6 md:w-2/6 justify-self-center gap-1",
                  },
                  React.createElement(
                    "div",
                    {
                      className:
                        "text-center text-semibold text-s text-grey-700 opacity-60 dark:text-white",
                    },
                    "If you encounter any errors, please refresh the page to resolve the issue.",
                  ),
                  React.createElement(Button.make, {
                    buttonState: "Normal",
                    text: "Refresh recon tab",
                    buttonType: "Primary",
                    buttonSize: "Small",
                    onClick: function (_v) {
                      getReconToken();
                    },
                    customButtonStyle:
                      "w-2/3 rounded-sm !bg-jp-blue-button_blue border border-jp-blue-border_blue mt-4",
                  }),
                ),
              ),
        ),
        screenState: match$1[0],
      }),
    ),
  });
}

var make = ReconModule;

export { make };
/* react Not a pure module */
