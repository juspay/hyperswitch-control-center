// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Js_exn from "rescript/lib/es6/js_exn.js";
import * as APIUtils from "../APIUtils/APIUtils.bs.js";
import * as PageUtils from "../Helpers/PageUtils.bs.js";
import * as LogicUtils from "../../utils/LogicUtils.bs.js";
import * as TableAtoms from "../../Recoils/TableAtoms.bs.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as Core__Option from "@rescript/core/src/Core__Option.bs.js";
import * as CustomersEntity from "./CustomersEntity.bs.js";
import * as PageLoaderWrapper from "../Helpers/PageLoaderWrapper.bs.js";
import * as Caml_js_exceptions from "rescript/lib/es6/caml_js_exceptions.js";
import * as LoadedTableWithCustomColumns from "../../components/LoadedTableWithCustomColumns.bs.js";

function Customers(props) {
  var getURL = APIUtils.useGetURL();
  var fetchDetails = APIUtils.useGetMethod(undefined, undefined);
  var match = React.useState(function () {
    return "Loading";
  });
  var setScreenState = match[1];
  var match$1 = React.useState(function () {
    return [];
  });
  var setCustomersData = match$1[1];
  var customersData = match$1[0];
  var match$2 = React.useState(function () {
    return 0;
  });
  var getCustomersList = async function () {
    try {
      setScreenState(function (param) {
        return "Loading";
      });
      var customersUrl = getURL(
        "CUSTOMERS",
        "Get",
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
      );
      var response = await fetchDetails(customersUrl);
      var data = LogicUtils.getArrayDataFromJson(
        response,
        CustomersEntity.itemToObjMapper,
      );
      setCustomersData(function (param) {
        return data.map(function (prim) {
          return prim;
        });
      });
      return setScreenState(function (param) {
        return "Success";
      });
    } catch (raw_e) {
      var e = Caml_js_exceptions.internalToOCamlException(raw_e);
      if (e.RE_EXN_ID === Js_exn.$$Error) {
        var err = Core__Option.getOr(e._1.message, "Failed to Fetch!");
        return setScreenState(function (param) {
          return {
            TAG: "Error",
            _0: err,
          };
        });
      }
      throw e;
    }
  };
  React.useEffect(function () {
    getCustomersList();
  }, []);
  return React.createElement(
    PageLoaderWrapper.make,
    {
      children: Caml_option.some(null),
      screenState: match[0],
    },
    React.createElement(PageUtils.PageHeading.make, {
      title: "Customers",
      subTitle: "View all customers",
    }),
    React.createElement(LoadedTableWithCustomColumns.make, {
      title: " ",
      showSerialNumber: true,
      actualData: customersData,
      totalResults: customersData.length,
      resultsPerPage: 10,
      offset: match$2[0],
      setOffset: match$2[1],
      entity: CustomersEntity.customersEntity,
      currrentFetchCount: customersData.length,
      hideTitle: true,
      customColumnMapper: TableAtoms.customersMapDefaultCols,
      defaultColumns: CustomersEntity.defaultColumns,
      sortingBasedOnDisabled: false,
      showSerialNumberInCustomizeColumns: false,
    }),
  );
}

var make = Customers;

export { make };
/* react Not a pure module */
