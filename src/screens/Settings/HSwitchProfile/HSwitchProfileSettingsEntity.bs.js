// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Icon from "../../../components/Icon.bs.js";
import * as Table from "../../../components/Table.bs.js";
import * as React from "react";
import * as EntityType from "../../../entities/EntityType.bs.js";
import * as LogicUtils from "../../../utils/LogicUtils.bs.js";

var visibleColumns = ["MerchantId", "MerchantName", "RoleName"];

var defaultColumns = ["MerchantId", "MerchantName", "RoleName"];

var allColumns = ["MerchantId", "MerchantName", "RoleName"];

function itemToObjMapper(dict) {
  return {
    merchant_id: LogicUtils.getString(dict, "merchant_id", ""),
    merchant_name: LogicUtils.getString(dict, "merchant_name", ""),
    is_active: LogicUtils.getBool(dict, "is_active", false),
    role_id: LogicUtils.getString(dict, "role_id", ""),
    role_name: LogicUtils.getString(dict, "role_name", ""),
    org_id: LogicUtils.getString(dict, "org_id", ""),
  };
}

function getItems(json) {
  return LogicUtils.getArrayDataFromJson(json, itemToObjMapper);
}

function getHeading(colType) {
  switch (colType) {
    case "MerchantName":
      return Table.makeHeaderInfo(
        "merchant_name",
        "Merchant Name",
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
      );
    case "RoleName":
      return Table.makeHeaderInfo(
        "role",
        "Role",
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
      );
    case "MerchantId":
      return Table.makeHeaderInfo(
        "merchant id",
        "Merchant Id",
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
      );
  }
}

function getCell(item, colType) {
  switch (colType) {
    case "MerchantName":
      return {
        TAG: "Text",
        _0: item.merchant_name,
      };
    case "RoleName":
      return {
        TAG: "CustomCell",
        _0: React.createElement(
          "div",
          {
            className: "flex flex-row gap-2",
          },
          React.createElement(Icon.make, {
            name: "user",
            size: 12,
            className: "text-jp-gray-700",
          }),
          React.createElement(
            "span",
            undefined,
            LogicUtils.snakeToTitle(item.role_name),
          ),
        ),
        _1: "",
      };
    case "MerchantId":
      return {
        TAG: "Text",
        _0: item.merchant_id,
      };
  }
}

var merchantTableEntity = EntityType.makeEntity(
  "",
  getItems,
  defaultColumns,
  allColumns,
  getHeading,
  getCell,
  "",
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
);

export {
  visibleColumns,
  defaultColumns,
  allColumns,
  itemToObjMapper,
  getItems,
  getHeading,
  getCell,
  merchantTableEntity,
};
/* merchantTableEntity Not a pure module */
