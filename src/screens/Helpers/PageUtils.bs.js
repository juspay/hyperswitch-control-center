// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Icon from "../../components/Icon.bs.js";
import * as React from "react";
import * as RenderIf from "../../utils/RenderIf.bs.js";
import * as LogicUtils from "../../utils/LogicUtils.bs.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as HSwitchUtils from "../HSwitchUtils.bs.js";

function PageUtils$PageHeading(props) {
  var __leftIcon = props.leftIcon;
  var __customTagStyle = props.customTagStyle;
  var __tagText = props.tagText;
  var __isTag = props.isTag;
  var __customHeadingStyle = props.customHeadingStyle;
  var __customSubTitleStyle = props.customSubTitleStyle;
  var __customTitleStyle = props.customTitleStyle;
  var subTitle = props.subTitle;
  var customTitleStyle =
    __customTitleStyle !== undefined ? __customTitleStyle : "";
  var customSubTitleStyle =
    __customSubTitleStyle !== undefined
      ? __customSubTitleStyle
      : "text-lg font-medium";
  var customHeadingStyle =
    __customHeadingStyle !== undefined ? __customHeadingStyle : "py-2";
  var isTag = __isTag !== undefined ? __isTag : false;
  var tagText = __tagText !== undefined ? __tagText : "";
  var customTagStyle =
    __customTagStyle !== undefined
      ? __customTagStyle
      : "bg-extra-light-grey border-light-grey";
  var leftIcon =
    __leftIcon !== undefined
      ? Caml_option.valFromOption(__leftIcon)
      : undefined;
  var headerTextStyle = HSwitchUtils.getTextClass(["H1", "Optional"]);
  return React.createElement(
    "div",
    {
      className: customHeadingStyle,
    },
    leftIcon !== undefined
      ? React.createElement(Icon.make, {
          name: leftIcon,
          size: 56,
        })
      : null,
    React.createElement(
      "div",
      {
        className: "flex items-center gap-4",
      },
      React.createElement(
        "div",
        {
          className: headerTextStyle + " " + customTitleStyle,
        },
        props.title,
      ),
      React.createElement(RenderIf.make, {
        condition: isTag,
        children: React.createElement(
          "div",
          {
            className:
              "text-sm text-grey-700 font-semibold border  rounded-full px-2 py-1 " +
              customTagStyle,
          },
          tagText,
        ),
      }),
    ),
    subTitle !== undefined
      ? React.createElement(RenderIf.make, {
          condition: LogicUtils.isNonEmptyString(subTitle),
          children: React.createElement(
            "div",
            {
              className: "opacity-50 mt-2 " + customSubTitleStyle,
            },
            subTitle,
          ),
        })
      : null,
  );
}

var PageHeading = {
  make: PageUtils$PageHeading,
};

export { PageHeading };
/* Icon Not a pure module */
