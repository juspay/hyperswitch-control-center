// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as ThemeProvider from "../../../context/ThemeProvider.bs.js";

function SuggestedActionHelper$SuggestedAction(props) {
  return React.createElement(
    "div",
    {
      className:
        "whitespace-pre-line break-all flex flex-col gap-1 p-2 ml-4 text-base dark:text-jp-gray-text_darktheme dark:text-opacity-50 font-medium leading-7 opacity-50 mt-4",
    },
    "Suggested Action:",
  );
}

var SuggestedAction = {
  make: SuggestedActionHelper$SuggestedAction,
};

function SuggestedActionHelper$StripSendingCreditCard(props) {
  var match = React.useContext(ThemeProvider.themeContext);
  return React.createElement(
    React.Fragment,
    {},
    React.createElement(SuggestedActionHelper$SuggestedAction, {}),
    React.createElement(
      "div",
      {
        className:
          "whitespace-pre-line break-word flex flex-col gap-1 bg-green-50 rounded-md font-medium p-4 ml-6",
      },
      React.createElement(
        "div",
        {
          className: "inline gap-1",
        },
        "Click ",
        React.createElement(
          "a",
          {
            className:
              "inline " +
              match.globalUIConfig.font.textColor.primaryNormal +
              " underline",
            href: "https://dashboard.stripe.com/settings/integration",
            target: "_blank",
          },
          "here",
        ),
        ' to turn on the "Enable raw card processing" toggle under the show advanced settings',
      ),
    ),
  );
}

var StripSendingCreditCard = {
  make: SuggestedActionHelper$StripSendingCreditCard,
};

function SuggestedActionHelper$StripeInvalidAPIKey(props) {
  var match = React.useContext(ThemeProvider.themeContext);
  return React.createElement(
    React.Fragment,
    {},
    React.createElement(SuggestedActionHelper$SuggestedAction, {}),
    React.createElement(
      "div",
      {
        className:
          "whitespace-pre-line break-word flex flex-col gap-1 bg-green-50 rounded-md font-medium p-4 ml-6",
      },
      React.createElement(
        "div",
        {
          className: "inline gap-1",
        },
        "Please use a secret API key. Click ",
        React.createElement(
          "a",
          {
            className:
              "inline " +
              match.globalUIConfig.font.textColor.primaryNormal +
              " underline",
            href: "https://dashboard.stripe.com/test/apikeys",
            target: "_blank",
          },
          "here",
        ),
        " to find the Secret key of your stripe account from the list of your API keys",
      ),
    ),
  );
}

var StripeInvalidAPIKey = {
  make: SuggestedActionHelper$StripeInvalidAPIKey,
};

function SuggestedActionHelper$PaypalClientAuthenticationFalied(props) {
  var match = React.useContext(ThemeProvider.themeContext);
  return React.createElement(
    React.Fragment,
    {},
    React.createElement(SuggestedActionHelper$SuggestedAction, {}),
    React.createElement(
      "div",
      {
        className:
          "whitespace-pre-line break-word flex flex-col gap-1 bg-green-50 rounded-md font-medium p-4 ml-6",
      },
      React.createElement(
        "div",
        {
          className: "inline gap-1",
        },
        "Please use the correct credentials. Click ",
        React.createElement(
          "a",
          {
            className:
              "inline " +
              match.globalUIConfig.font.textColor.primaryNormal +
              " underline",
            href: "https://developer.paypal.com/dashboard/applications/sandbox",
            target: "_blank",
          },
          "here",
        ),
        " to find the client secret and client key of your Paypal",
      ),
    ),
  );
}

var PaypalClientAuthenticationFalied = {
  make: SuggestedActionHelper$PaypalClientAuthenticationFalied,
};

export {
  SuggestedAction,
  StripSendingCreditCard,
  StripeInvalidAPIKey,
  PaypalClientAuthenticationFalied,
};
/* react Not a pure module */
