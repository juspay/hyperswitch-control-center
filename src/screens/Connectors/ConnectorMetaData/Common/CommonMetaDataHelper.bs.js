// Generated by ReScript, PLEASE EDIT WITH CARE

import * as SelectBox from "../../../../components/SelectBox.bs.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as InputFields from "../../../../components/InputFields.bs.js";
import * as FormRenderer from "../../../../components/form/FormRenderer.bs.js";
import * as CurrencyUtils from "../../../../utils/CurrencyUtils.bs.js";

function textInput(field, formName) {
  return FormRenderer.makeFieldInfo(
    field.label,
    undefined,
    formName,
    InputFields.textInput(
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
    ),
    undefined,
    undefined,
    undefined,
    undefined,
    field.placeholder,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    field.required,
    undefined,
    undefined,
    undefined,
  );
}

function selectInput(field, formName, optOpt, onItemChange, param) {
  var opt =
    optOpt !== undefined ? Caml_option.valFromOption(optOpt) : undefined;
  var options = opt !== undefined ? opt : SelectBox.makeOptions(field.options);
  return FormRenderer.makeFieldInfo(
    field.label,
    undefined,
    formName,
    function (input, param) {
      return InputFields.selectInput(
        options,
        "Select Value",
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        "max-h-48",
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
      )(
        {
          name: input.name,
          onBlur: input.onBlur,
          onChange: function ($$event) {
            if (onItemChange !== undefined) {
              onItemChange($$event);
            }
            input.onChange($$event);
          },
          onFocus: input.onFocus,
          value: input.value,
          checked: input.checked,
        },
        "",
      );
    },
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    field.required,
    undefined,
    undefined,
    undefined,
  );
}

function multiSelectInput(field, formName) {
  return FormRenderer.makeFieldInfo(
    field.label,
    undefined,
    formName,
    InputFields.multiSelectInput(
      SelectBox.makeOptions(field.options),
      undefined,
      "Select Value",
      undefined,
      undefined,
      false,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      "max-h-48",
      undefined,
      "pr-3",
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
    ),
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    field.required,
    undefined,
    undefined,
    undefined,
  );
}

function toggleInput(field, formName) {
  return FormRenderer.makeFieldInfo(
    field.label,
    undefined,
    formName,
    InputFields.boolInput(false, undefined, "rounded-lg", undefined),
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
  );
}

function radioInput(field, formName, onItemChange, fillOpt, param) {
  var fill = fillOpt !== undefined ? fillOpt : "";
  var options = field.options;
  return FormRenderer.makeFieldInfo(
    field.label,
    undefined,
    formName,
    function (input, param) {
      return InputFields.radioInput(
        SelectBox.makeOptions(options),
        "",
        undefined,
        undefined,
        true,
        undefined,
        "cursor-pointer gap-2",
        undefined,
        undefined,
        fill,
        undefined,
        undefined,
      )(
        {
          name: input.name,
          onBlur: input.onBlur,
          onChange: function ($$event) {
            if (onItemChange !== undefined) {
              onItemChange($$event);
            }
            input.onChange($$event);
          },
          onFocus: input.onFocus,
          value: input.value,
          checked: input.checked,
        },
        "",
      );
    },
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    field.required,
    undefined,
    undefined,
    undefined,
  );
}

function getCurrencyOption(currencyType) {
  return {
    label: CurrencyUtils.getCurrencyCodeStringFromVariant(currencyType),
    value: CurrencyUtils.getCurrencyCodeStringFromVariant(currencyType),
  };
}

function currencyField(
  name,
  optionsOpt,
  disableSelectOpt,
  toolTipTextOpt,
  param,
) {
  var options =
    optionsOpt !== undefined ? optionsOpt : CurrencyUtils.currencyList;
  var disableSelect = disableSelectOpt !== undefined ? disableSelectOpt : false;
  var toolTipText = toolTipTextOpt !== undefined ? toolTipTextOpt : "";
  return FormRenderer.makeFieldInfo(
    "Currency",
    undefined,
    name,
    InputFields.selectInput(
      options.map(getCurrencyOption),
      "Select Currency",
      true,
      undefined,
      disableSelect,
      undefined,
      undefined,
      undefined,
      undefined,
      "max-h-48",
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
      undefined,
    ),
    toolTipText,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    undefined,
    true,
    undefined,
    undefined,
    undefined,
  );
}

export {
  textInput,
  selectInput,
  multiSelectInput,
  toggleInput,
  radioInput,
  getCurrencyOption,
  currencyField,
};
/* SelectBox Not a pure module */
