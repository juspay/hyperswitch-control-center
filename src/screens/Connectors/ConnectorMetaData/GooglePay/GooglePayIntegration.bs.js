// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Button from "../../../../components/Button.bs.js";
import * as Js_exn from "rescript/lib/es6/js_exn.js";
import * as LogicUtils from "../../../../utils/LogicUtils.bs.js";
import * as FormRenderer from "../../../../components/form/FormRenderer.bs.js";
import * as GooglePayUtils from "./GooglePayUtils.bs.js";
import * as ReactFinalForm from "../../../../libraries/ReactFinalForm.bs.js";
import * as ReactFinalForm$1 from "react-final-form";
import * as Caml_js_exceptions from "rescript/lib/es6/caml_js_exceptions.js";
import * as CommonMetaDataUtils from "../Common/CommonMetaDataUtils.bs.js";

function GooglePayIntegration(props) {
  var onCloseClickCustomFun = props.onCloseClickCustomFun;
  var update = props.update;
  var setShowWalletConfigurationModal = props.setShowWalletConfigurationModal;
  var connector = props.connector;
  var googlePayFields = React.useMemo(
    function () {
      try {
        if (LogicUtils.isNonEmptyString(connector)) {
          return LogicUtils.getArrayFromDict(
            LogicUtils.getDictfromDict(
              LogicUtils.getDictFromJsonObject(
                window.getConnectorConfig(connector),
              ),
              "metadata",
            ),
            "google_pay",
            [],
          );
        } else {
          return [];
        }
      } catch (raw_e) {
        var e = Caml_js_exceptions.internalToOCamlException(raw_e);
        if (e.RE_EXN_ID === Js_exn.$$Error) {
          console.log("FAILED TO LOAD CONNECTOR CONFIG", e._1);
          return [];
        }
        throw e;
      }
    },
    [connector],
  );
  var formState = ReactFinalForm$1.useFormState(
    ReactFinalForm.useFormSubscription(["values"]),
  );
  var initialGooglePayDict = React.useMemo(function () {
    return LogicUtils.getDictfromDict(
      LogicUtils.getDictFromJsonObject(formState.values),
      "metadata",
    );
  }, []);
  var form = ReactFinalForm$1.useForm();
  React.useEffect(
    function () {
      if (LogicUtils.isNonEmptyString(connector)) {
        var value = GooglePayUtils.googlePay(
          LogicUtils.getDictfromDict(initialGooglePayDict, "google_pay"),
          connector,
        );
        form.change("metadata.google_pay", value._0);
      }
    },
    [connector],
  );
  var onSubmit = function () {
    var metadata = LogicUtils.getDictfromDict(
      LogicUtils.getDictFromJsonObject(formState.values),
      "metadata",
    );
    setShowWalletConfigurationModal(function (param) {
      return false;
    });
    update(metadata);
    return Promise.resolve(null);
  };
  var closeModal = function () {
    onCloseClickCustomFun();
    setShowWalletConfigurationModal(function (param) {
      return false;
    });
  };
  return React.createElement(
    React.Fragment,
    {},
    googlePayFields.map(function (field, index) {
      var googlePayField = CommonMetaDataUtils.inputFieldMapper(
        LogicUtils.convertMapObjectToDict(field),
      );
      return React.createElement(
        "div",
        {
          key: index.toString(),
        },
        React.createElement(FormRenderer.FieldRenderer.make, {
          field: GooglePayUtils.googlePayValueInput(googlePayField),
          labelClass: "font-semibold !text-hyperswitch_black",
        }),
      );
    }),
    React.createElement(
      "div",
      {
        className: "flex gap-2 justify-end mt-4",
      },
      React.createElement(Button.make, {
        text: "Cancel",
        buttonType: "Secondary",
        onClick: function (_ev) {
          closeModal();
        },
      }),
      React.createElement(Button.make, {
        text: "Proceed",
        buttonType: "Primary",
        onClick: function (_ev) {
          onSubmit();
        },
      }),
    ),
  );
}

var make = GooglePayIntegration;

export { make };
/* react Not a pure module */
