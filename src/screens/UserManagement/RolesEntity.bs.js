// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Table from "../../components/Table.bs.js";
import * as React from "react";
import * as EntityType from "../../entities/EntityType.bs.js";
import * as LogicUtils from "../../utils/LogicUtils.bs.js";

var defaultColumnsForRoles = ["RoleName", "RoleScope", "ModulePermissions"];

var allColumnsForUser = ["RoleName", "RoleScope", "ModulePermissions"];

function itemToObjMapperForRoles(dict) {
  return {
    role_name: LogicUtils.getString(dict, "role_name", ""),
    role_scope: LogicUtils.getString(dict, "role_scope", ""),
    groups: LogicUtils.getArrayFromDict(dict, "groups", []),
  };
}

function getHeadingForRoles(colType) {
  switch (colType) {
    case "RoleName":
      return Table.makeHeaderInfo(
        "role_name",
        "Role name",
        undefined,
        true,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
      );
    case "RoleScope":
      return Table.makeHeaderInfo(
        "role_scope",
        "Role scope",
        undefined,
        true,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
      );
    case "ModulePermissions":
      return Table.makeHeaderInfo(
        "groups",
        "Module permissions",
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
      );
  }
}

function getCellForRoles(data, colType) {
  switch (colType) {
    case "RoleName":
      return {
        TAG: "Text",
        _0: LogicUtils.snakeToTitle(data.role_name),
      };
    case "RoleScope":
      return {
        TAG: "Text",
        _0: LogicUtils.capitalizeString(data.role_scope),
      };
    case "ModulePermissions":
      return {
        TAG: "CustomCell",
        _0: React.createElement(
          "div",
          undefined,
          LogicUtils.getStrArrayFromJsonArray(data.groups)
            .map(function (item) {
              return LogicUtils.snakeToTitle(item);
            })
            .join(", "),
        ),
        _1: "",
      };
  }
}

function getrolesData(json) {
  return LogicUtils.getArrayDataFromJson(json, itemToObjMapperForRoles);
}

var rolesEntity = EntityType.makeEntity(
  "",
  getrolesData,
  defaultColumnsForRoles,
  allColumnsForUser,
  getHeadingForRoles,
  getCellForRoles,
  "",
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
  undefined,
);

export {
  defaultColumnsForRoles,
  allColumnsForUser,
  itemToObjMapperForRoles,
  getHeadingForRoles,
  getCellForRoles,
  getrolesData,
  rolesEntity,
};
/* rolesEntity Not a pure module */
