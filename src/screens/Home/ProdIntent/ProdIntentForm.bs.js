// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as APIUtils from "../../APIUtils/APIUtils.bs.js";
import * as LogicUtils from "../../../utils/LogicUtils.bs.js";
import * as Core__Option from "@rescript/core/src/Core__Option.bs.js";
import * as GlobalProvider from "../../../entryPoints/Provider/GlobalProvider.bs.js";
import * as CommonAuthHooks from "../../../entryPoints/AuthModule/Common/CommonAuthHooks.bs.js";
import * as ProdVerifyModal from "./ProdVerifyModal.bs.js";
import * as ProdVerifyModalUtils from "./ProdVerifyModalUtils.bs.js";

function ProdIntentForm(props) {
  var fetchDetails = APIUtils.useGetMethod(undefined, undefined);
  var getURL = APIUtils.useGetURL();
  var match = Core__Option.getOr(
    CommonAuthHooks.useCommonAuthInfo(),
    CommonAuthHooks.defaultAuthInfo,
  );
  var email = match.email;
  var match$1 = React.useContext(GlobalProvider.defaultContext);
  var setIsProdIntentCompleted = match$1.setIsProdIntentCompleted;
  var match$2 = React.useState(function () {
    return {};
  });
  var setInitialValues = match$2[1];
  var getProdVerifyDetails = async function () {
    try {
      var url = getURL(
        "USERS",
        "Get",
        undefined,
        undefined,
        "USER_DATA",
        undefined,
        undefined,
        "keys=ProdIntent",
        undefined,
      );
      var res = await fetchDetails(url);
      var firstValueFromArray = LogicUtils.getValueFromArray(
        LogicUtils.getArrayFromJson(res, []),
        0,
        null,
      );
      var valueForProdIntent = LogicUtils.getDictfromDict(
        LogicUtils.getDictFromJsonObject(firstValueFromArray),
        "ProdIntent",
      );
      var hideHeader = LogicUtils.getBool(
        valueForProdIntent,
        ProdVerifyModalUtils.getStringFromVariant("IsCompleted"),
        false,
      );
      if (!hideHeader) {
        valueForProdIntent[
          ProdVerifyModalUtils.getStringFromVariant("POCemail")
        ] = email;
      }
      setIsProdIntentCompleted(function (param) {
        return hideHeader;
      });
      return setInitialValues(function (param) {
        return valueForProdIntent;
      });
    } catch (exn) {
      return;
    }
  };
  React.useEffect(function () {
    getProdVerifyDetails();
  }, []);
  return React.createElement(ProdVerifyModal.make, {
    showModal: match$1.showProdIntentForm,
    setShowModal: match$1.setShowProdIntentForm,
    initialValues: match$2[0],
    getProdVerifyDetails: getProdVerifyDetails,
  });
}

var make = ProdIntentForm;

export { make };
/* react Not a pure module */
