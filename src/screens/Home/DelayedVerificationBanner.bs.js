// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as APIUtils from "../APIUtils/APIUtils.bs.js";
import * as PopUpState from "../../hooks/PopUpState.bs.js";
import * as ToastState from "../../hooks/ToastState.bs.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as Core__Option from "@rescript/core/src/Core__Option.bs.js";
import * as CommonAuthHooks from "../../entryPoints/AuthModule/Common/CommonAuthHooks.bs.js";
import * as CommonAuthUtils from "../../entryPoints/AuthModule/Common/CommonAuthUtils.bs.js";
import * as HyperSwitchEntryUtils from "../../entryPoints/HyperSwitchEntryUtils.bs.js";

function DelayedVerificationBanner(props) {
  var verificationDays = props.verificationDays;
  var updateDetails = APIUtils.useUpdateMethod(false, undefined);
  var showToast = ToastState.useShowToast();
  var showPopUp = PopUpState.useShowPopUp();
  var getURL = APIUtils.useGetURL();
  var match = Core__Option.getOr(
    CommonAuthHooks.useCommonAuthInfo(),
    CommonAuthHooks.defaultAuthInfo,
  );
  var email = match.email;
  var authId = HyperSwitchEntryUtils.getSessionData(
    "auth_id",
    undefined,
    undefined,
  );
  var verificationMessage =
    verificationDays.toString() +
    " " +
    (verificationDays === 1 ? "day" : "days") +
    " to go!";
  var resendEmailVerify = async function () {
    var body = CommonAuthUtils.getEmailBody(email, undefined, undefined);
    try {
      var url = getURL(
        "USERS",
        "Post",
        undefined,
        undefined,
        "VERIFY_EMAIL_REQUEST",
        undefined,
        undefined,
        Caml_option.some("auth_id=" + authId),
        undefined,
      );
      await updateDetails(
        url,
        body,
        "Post",
        undefined,
        undefined,
        undefined,
        undefined,
      );
      return showToast(
        "Email Send Successfully!",
        "ToastSuccess",
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
      );
    } catch (exn) {
      var heading = "Failed to send email";
      var description =
        "Please retry sending an email or try again after some time in case the issue persists!";
      var isApiFailed = true;
      var retryFunction = function () {
        resendEmailVerify();
      };
      return showPopUp({
        heading: heading,
        description: description,
        popUpType: ["Primary", "WithIcon"],
        handleConfirm: {
          text: isApiFailed ? "RETRY" : "OK",
          onClick: function (param) {
            if (isApiFailed) {
              return retryFunction();
            }
          },
        },
      });
    }
  };
  return React.createElement(
    "div",
    {
      className:
        "flex justify-center items-center text-lg bg-orange-100 dark:text-black rounded-bl-lg rounded-br-lg px-10 py-2 whitespace-nowrap",
    },
    React.createElement(
      "span",
      {
        className: "font-bold mr-1",
      },
      verificationMessage,
    ),
    React.createElement(
      "span",
      {
        className:
          "hover:underline text-orange-900 cursor-pointer font-bold ml-1 underline underline-offset-2",
        onClick: function (param) {
          resendEmailVerify();
        },
      },
      "Verify",
    ),
    React.createElement(
      "span",
      {
        className: "ml-1 font-medium",
      },
      "your email address for uninterrupted access. ",
    ),
  );
}

var make = DelayedVerificationBanner;

export { make };
/* react Not a pure module */
