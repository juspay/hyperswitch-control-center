// Generated by ReScript, PLEASE EDIT WITH CARE

import * as LogicUtils from "../../../../utils/LogicUtils.bs.js";
import * as Core__Option from "@rescript/core/src/Core__Option.bs.js";
import * as PerformanceUtils from "../PerformanceUtils.bs.js";

function getStackedBarData(array, config) {
  var grouped = PerformanceUtils.getGroupByDataForStatusAndPaymentCount(
    array,
    config.groupByKeys,
  );
  var keys = Object.keys(grouped);
  var finalResult = {};
  var categories = [];
  keys.forEach(function (v) {
    var dict = Core__Option.getOr(grouped[v], {});
    Object.keys(dict).forEach(function (ele) {
      var match = dict[ele];
      if (match !== undefined) {
        var val = LogicUtils.getInt(dict, ele, 0);
        var arr = Core__Option.getOr(finalResult[ele], []);
        arr.push(val);
        finalResult[ele] = arr;
        return;
      }
      var val$1 = LogicUtils.getInt(dict, ele, 0);
      finalResult[ele] = [val$1];
    });
    categories.push(v);
  });
  var series = Object.keys(finalResult).map(function (val) {
    return {
      name: val,
      data: Core__Option.getOr(finalResult[val], []),
    };
  });
  return {
    categories: categories,
    series: series,
  };
}

function barOption(config, data) {
  return {
    chart: {
      type: "column",
    },
    colors: config.colors,
    title: {
      text: config.title.text,
      align: "left",
    },
    xAxis: {
      categories: data.categories,
      title: {
        text: config.xAxis.text,
      },
    },
    yAxis: {
      min: 0,
      stackLabels: {
        enabled: true,
      },
    },
    legend: {
      align: "right",
      x: 10,
      verticalAlign: "top",
      y: 10,
      floating: true,
      backgroundColor: "white",
      borderColor: "#CCC",
      borderWidth: 1,
      shadow: false,
    },
    tooltip: {
      headerFormat: "<b>{point.x}</b><br/>",
      pointFormat: "{series.name}: {point.y}<br/>Total: {point.stackTotal}",
    },
    plotOptions: {
      column: {
        stacking: "normal",
        dataLabels: {
          enabled: true,
        },
      },
    },
    series: data.series,
  };
}

export { getStackedBarData, barOption };
/* LogicUtils Not a pure module */
