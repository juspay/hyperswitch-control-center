// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as APIUtils from "../../../APIUtils/APIUtils.bs.js";
import * as LogicUtils from "../../../../utils/LogicUtils.bs.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as HighchartBarChart from "../../../../components/CustomCharts/HighchartBarChart.bs.js";
import * as BarChartPerformanceUtils from "./BarChartPerformanceUtils.bs.js";

function BarChartPerformance(props) {
  var entity = props.entity;
  var dimensions = props.dimensions;
  var endTimeVal = props.endTimeVal;
  var startTimeVal = props.startTimeVal;
  var updateDetails = APIUtils.useUpdateMethod(undefined, undefined);
  var match = React.useState(function () {
    return null;
  });
  var setBarOptions = match[1];
  var chartFetch = async function () {
    try {
      var body = entity.getBody(
        dimensions,
        startTimeVal,
        endTimeVal,
        entity.requestBodyConfig.metrics,
        entity.requestBodyConfig.groupBy,
        entity.requestBodyConfig.filters,
        entity.requestBodyConfig.customFilter,
        entity.requestBodyConfig.applyFilterFor,
      );
      var res = await updateDetails(
        "https://sandbox.hyperswitch.io/analytics/v1/metrics/payments",
        body,
        "Post",
        undefined,
        undefined,
        undefined,
        undefined,
      );
      var arr = LogicUtils.getArrayFromDict(
        LogicUtils.getDictFromJsonObject(res),
        "queryData",
        [],
      );
      var configData = entity.getChartData(
        arr,
        entity.configRequiredForChartData,
      );
      var options = BarChartPerformanceUtils.barOption(
        entity.chartConfig,
        configData,
      );
      return setBarOptions(function (param) {
        return options;
      });
    } catch (exn) {
      return;
    }
  };
  React.useEffect(
    function () {
      if (
        LogicUtils.isNonEmptyString(startTimeVal) &&
        LogicUtils.isNonEmptyString(endTimeVal)
      ) {
        chartFetch();
      }
    },
    [dimensions],
  );
  return React.createElement(React.Fragment, {
    children: Caml_option.some(
      React.createElement(HighchartBarChart.RawBarChart.make, {
        options: match[0],
      }),
    ),
  });
}

var make = BarChartPerformance;

export { make };
/* react Not a pure module */
