name: Link PR to Issue

on:
  pull_request:
    types:
      - opened
      - edited
      - reopened
      - ready_for_review
      - synchronize

jobs:
  link-pr-to-issue:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Get Issue Number from Branch Name
      id: extract_issue_number
      run: echo "::set-output name=issue_number::$(echo "${{ github.event.pull_request.head.ref }}" | grep -oP '\/\K[0-9]+')"

    - name: Link PR to Issue in PR Description
      run: |
        issue_number="${{ steps.extract_issue_number.outputs.issue_number }}"
        pr_number="${{ github.event.pull_request.number }}"
        pr_url="${{ github.event.pull_request.html_url }}"
        api_url="https://api.github.com/repos/${{ github.repository }}/pulls/${pr_number}"
        current_description=$(curl -sS -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "$api_url" | jq -r '.body')

        # Retrieve existing comments
        existing_comments=$(curl -sS -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                                "https://api.github.com/repos/${{ github.repository }}/issues/${issue_number}/comments")

        # Extract existing comment bodies and concatenate with the new comment
        all_comments=$(echo "$existing_comments" | jq -r '.[].body' | echo "$new_comment" && cat)

        # Check if the comment body is not empty
        if [ -n "$all_comments" ]; then
          # Update comments with the new concatenated comments
          api_url="https://api.github.com/repos/${{ github.repository }}/issues/${issue_number}/comments"
          curl -sS -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               -X POST \
               -d "{\"body\":\"$all_comments\"}" \
               "$api_url"
        else
          echo "No comments to add."
        fi
