name: Cypress Tests

on:
  merge_group:
  pull_request:

jobs:
  cypress-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.AUTO_RELEASE_PAT }}

      - name: Clear Docker cache
        run: |
          docker builder prune -af

      - name: Execute Shell Script
        run: |
          chmod +x cypress/start_hyperswitch.sh
          sh cypress/start_hyperswitch.sh

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install --force

      - name: Make Curl Request
        run: |
          # Replace the URL with your actual endpoint
          response=$(curl --location --request GET 'http://localhost:8080/health')

          echo "Response:"
          echo "$response"

      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          install: false
          build: npm run build:test
          start: npm run test:start

      - name: Run Tests and Collect Coverage
        run: npx cypress run && npx nyc --reporter=text-summary npx cypress run

      - name: Extract Coverage Metrics
        id: extract_coverage
        run: |
          statements=$(npx nyc report --reporter=text-summary | awk '/Statements/{print $3}' | sed 's/%//')
          branches=$(npx nyc report --reporter=text-summary | awk '/Branches/{print $3}' | sed 's/%//')
          functions=$(npx nyc report --reporter=text-summary | awk '/Functions/{print $3}' | sed 's/%//')
          lines=$(npx nyc report --reporter=text-summary | awk '/Lines/{print $3}' | sed 's/%//')

          echo "STATEMENTS=$statements" >> $GITHUB_ENV
          echo "BRANCHES=$branches" >> $GITHUB_ENV
          echo "FUNCTIONS=$functions" >> $GITHUB_ENV
          echo "LINES=$lines" >> $GITHUB_ENV

      - name: Check Coverage Thresholds
        run: |
          if [ "$(expr "$STATEMENTS" + 0)" -lt 90 ]; then
            echo "Statements coverage is below the threshold (90%)"
            exit 1
          fi
      
          if [ "$(expr "$BRANCHES" + 0)" -lt 90 ]; then
            echo "Branches coverage is below the threshold (90%)"
            exit 1
          fi
      
          if [ "$(expr "$FUNCTIONS" + 0)" -lt 90 ]; then
            echo "Functions coverage is below the threshold (90%)"
            exit 1
          fi
      
          if [ "$(expr "$LINES" + 0)" -lt 90 ]; then
            echo "Lines coverage is below the threshold (90%)"
            exit 1
          fi
